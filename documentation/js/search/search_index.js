var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.831,1,1.229]],["body/components/AppComponent.html",[0,1.41,1,2.154,2,1.85,3,0.522,4,0.522,5,1.18,6,1.549,7,1.549,8,0.373,9,2.141,10,0.716,11,3.643,12,2.306,13,1.18,14,2.829,15,1.619,16,1.85,17,1.249,18,2.127,19,4.16,20,1.99,21,2.127,22,3.643,23,2.127,24,3.643,25,0.444,26,0.957,27,4.847,28,3.186,29,0.957,30,3.643,31,3.643,32,1.457,33,0.818,34,2.655,35,2.127,36,3.643,37,3.37,38,2.938,39,0.91,40,0.052,41,1.25,42,0.479,43,0.697,44,3.643,45,0.606,46,1.036,47,1.421,48,0.831,49,3.643,50,2.655,51,2.474,52,2.474,53,0.831,54,2.655,55,0.949,56,1.802,57,0.606,58,2.141,59,2.655,60,1.802,61,2.655,62,0.716,63,0.419,64,0.606,65,0.798,66,2.655,67,1.549,68,2.127,69,2.127,70,1.549,71,2.613,72,1.549,73,1.549,74,1.18,75,1.549,76,1.549,77,1.549,78,1.549,79,1.18,80,1.036,81,1.549,82,1.549,83,1.549,84,0.033,85,0.033]],["title/components/HomePageComponent.html",[0,0.831,74,1.229]],["body/components/HomePageComponent.html",[0,0.869,1,0.641,2,1.174,3,0.284,4,0.284,5,0.641,6,0.842,7,0.842,8,0.203,10,0.569,12,2.061,13,0.641,14,2.254,16,1.174,17,0.792,18,1.349,20,0.641,21,1.349,23,1.349,25,0.242,26,0.607,29,0.607,32,1.088,33,0.912,35,2.46,37,2.245,39,0.991,40,0.052,41,1.088,42,0.5,43,0.76,45,0.826,46,1.412,47,1.506,48,0.881,53,1.196,55,1.039,56,0.98,57,0.329,62,0.759,63,0.266,64,0.329,65,0.695,67,0.842,68,1.349,69,1.349,70,0.842,71,1.93,72,0.842,73,0.842,74,1.716,75,2.537,76,0.842,77,0.842,78,0.842,79,1.027,80,0.902,81,0.842,82,0.842,83,0.842,84,0.021,85,0.021,86,3.799,87,3.799,88,1.164,89,2.667,90,1.57,91,2.312,92,3.092,93,1.93,94,1.864,95,1.864,96,3.114,97,2.892,98,2.332,99,2.892,100,1.468,101,2.312,102,2.312,103,2.332,104,1.679,105,1.93,106,3.975,107,2.312,108,2.312,109,2.667,110,2.667,111,2.312,112,2.312,113,4.214,114,2.312,115,2.892,116,4.214,117,2.332,118,2.059,119,2.312,120,1.443,121,2.312,122,2.312,123,1.443,124,2.312,125,1.864,126,2.312,127,1.864,128,2.312,129,1.443,130,1.57,131,1.443,132,1.864,133,1.133,134,3.307,135,1.443,136,2.312,137,1.443,138,2.312,139,2.312,140,1.864,141,1.864,142,2.312,143,2.312,144,2.312,145,2.312,146,2.312,147,1.443,148,2.537,149,2.312,150,2.312,151,2.312,152,1.57,153,2.312,154,2.312,155,2.312,156,2.312,157,2.312,158,1.443,159,2.312,160,2.312,161,2.312,162,3.114,163,2.667,164,2.312,165,2.312,166,2.312,167,1.443,168,1.443,169,0.902,170,1.864,171,2.312,172,1.864,173,1.443,174,1.443,175,1.443,176,0.842,177,1.443,178,0.733,179,1.443,180,0.98,181,1.443,182,0.842,183,0.842,184,1.164,185,0.329,186,1.164,187,1.164,188,1.443,189,1.443,190,1.443,191,1.164,192,0.98,193,1.164,194,0.98,195,0.98,196,1.443,197,1.443,198,0.842,199,1.443,200,1.443,201,1.443,202,0.98,203,1.443,204,1.443,205,2.312,206,1.443,207,1.443,208,1.443,209,1.443,210,1.164,211,1.443,212,1.443,213,0.842,214,1.443,215,1.443]],["title/interfaces/ICache.html",[216,1.404,217,1.614]],["body/interfaces/ICache.html",[3,0.462,4,0.462,5,1.486,8,0.33,10,0.462,15,1.044,32,1.539,33,0.462,40,0.052,42,0.488,45,0.889,48,1.199,55,0.763,57,0.536,62,0.657,63,0.385,64,0.763,65,1.276,84,0.031,85,0.031,118,2.625,133,1.146,169,1.656,185,0.536,198,2.477,213,1.952,216,2.155,217,2.721,218,2.349,219,1.952,220,1.698,221,1.371,222,2.697,223,3.954,224,3.141,225,3.541,226,2.349,227,2.349,228,0.878,229,1.595,230,2.644,231,1.486,232,2.277,233,1.894,234,1.894,235,2.271,236,1.371,237,2.273,238,1.595,239,1.595,240,1.595,241,1.371,242,1.192,243,1.894,244,1.595,245,1.595,246,1.698,247,0.916,248,0.916,249,1.305,250,1.894,251,1.894,252,1.952,253,1.894,254,1.894,255,3.423,256,2.697,257,3.141,258,1.894,259,1.894,260,1.894,261,3.869,262,1.894,263,1.886,264,1.894,265,1.595,266,1.894,267,1.595,268,2.271,269,1.894,270,1.894,271,1.894,272,1.894,273,1.595,274,1.894,275,1.894,276,1.894,277,1.894,278,1.894,279,1.894]],["title/injectables/LocalStorageService.html",[228,0.726,232,1.404]],["body/injectables/LocalStorageService.html",[3,0.377,4,0.377,5,1.281,8,0.269,10,0.757,15,0.852,25,0.321,26,0.757,29,0.757,32,1.537,33,0.812,39,1.415,40,0.052,41,1.041,42,0.555,43,0.91,45,1.027,46,0.748,48,1.221,55,0.658,57,0.437,62,0.566,63,0.332,64,0.658,65,1.158,84,0.026,85,0.026,118,2.574,133,0.988,169,1.611,185,0.437,198,2.627,213,2.248,216,1.758,217,2.532,219,2.532,220,2.202,221,1.119,222,1.545,223,4.089,224,2.324,225,3.561,228,0.757,229,1.301,230,2.351,231,1.281,232,2.351,233,2.324,234,2.324,235,2.615,236,1.682,237,2.532,238,1.956,239,1.956,240,1.956,241,1.682,242,0.973,243,2.324,244,1.956,245,1.956,246,1.955,247,1.124,248,1.124,249,1.503,250,1.545,251,2.324,252,2.248,253,2.324,254,2.324,255,3.735,256,2.324,257,3.106,258,2.324,259,1.545,260,1.545,261,3.63,262,1.545,263,1.712,264,1.545,265,1.956,266,2.324,267,1.956,268,2.351,269,2.324,270,2.324,271,1.545,272,1.545,273,1.956,274,2.324,275,2.324,276,2.324,277,2.324,278,1.545,279,1.545,280,0.973,281,2.882,282,2.882,283,2.882,284,2.882,285,1.916,286,1.916,287,1.916]],["title/classes/OngoingRecording.html",[63,0.318,104,1.404]],["body/classes/OngoingRecording.html",[3,0.562,4,0.562,8,0.401,10,0.562,25,0.478,26,1.006,29,1.006,33,0.907,35,2.235,40,0.052,42,0.554,43,1.006,45,0.652,46,1.494,47,1.494,48,0.874,53,1.173,55,0.652,62,0.753,63,0.531,64,0.652,84,0.035,85,0.035,104,2.343,110,3.721,117,3.088,118,2.193,132,3.088,133,1.312,152,3.363,185,0.652,231,1.702,288,1.939,289,3.881,290,2.304,291,3.088,292,3.483,293,4.244,294,3.881,295,2.856,296,2.235,297,3.829,298,3.363,299,2.856,300,2.6,301,3.829,302,2.856,303,3.829,304,2.856,305,3.088,306,3.829,307,3.829,308,3.829,309,3.829,310,2.6,311,2.856]],["title/injectables/OpfsService.html",[228,0.726,312,1.404]],["body/injectables/OpfsService.html",[3,0.404,4,0.404,8,0.678,10,0.71,12,1.35,15,0.914,17,1.041,25,0.344,29,0.798,32,1.599,33,0.837,38,3.591,39,1.367,40,0.052,41,1.339,42,0.459,43,1.048,45,1.121,55,0.693,57,0.469,62,0.784,63,0.35,64,0.469,65,1.339,84,0.028,85,0.028,93,1.773,148,3.061,169,1.556,176,1.201,178,1.542,182,1.201,183,1.201,184,1.659,185,0.469,202,2.452,228,0.798,241,2.484,242,1.044,245,2.063,247,1.556,248,1.185,249,1.556,263,1.773,280,1.044,312,2.261,313,1.659,314,2.942,315,2.063,316,3.038,317,3.038,318,3.038,319,3.038,320,3.038,321,3.038,322,2.057,323,3.038,324,2.057,325,3.038,326,3.038,327,2.45,328,3.038,329,2.45,330,3.038,331,3.038,332,3.038,333,2.057,334,3.217,335,3.591,336,3.038,337,2.057,338,3.989,339,3.038,340,3.334,341,3.432,342,2.057,343,3.038,344,3.038,345,2.057,346,3.038,347,3.038,348,3.038,349,3.038,350,3.038,351,2.057,352,2.057,353,2.063,354,2.057,355,2.057,356,2.057,357,2.057,358,2.057,359,2.057,360,2.057,361,2.057,362,3.038,363,2.057,364,2.057,365,2.057,366,2.057,367,2.057,368,0.914,369,3.038,370,3.038,371,2.057,372,2.057]],["title/classes/Recording.html",[53,0.631,63,0.318]],["body/classes/Recording.html",[3,0.604,4,0.604,8,0.431,10,0.604,25,0.514,26,1.055,28,3.346,32,1.641,33,0.969,40,0.052,42,0.613,43,1.4,53,1.175,62,0.604,63,0.462,84,0.037,85,0.037,94,3.83,244,2.086,288,2.086,291,2.477,310,3.497,314,2.345,373,2.477,374,4.477,375,4.477,376,3.346,377,3.072,378,2.728,379,3.24,380,3.24,381,3.975,382,3.072,383,3.072,384,3.24,385,3.072,386,3.072]],["title/injectables/RecordingService.html",[105,1.614,228,0.726]],["body/injectables/RecordingService.html",[3,0.29,4,0.29,8,0.207,10,0.658,15,0.655,17,0.805,25,0.247,26,0.617,28,1,29,0.617,32,1.099,33,0.835,35,1.372,39,1.253,40,0.052,41,1.276,42,0.504,43,0.96,45,1.045,46,1.426,47,0.917,48,0.536,53,1.238,55,0.969,57,0.336,62,0.462,63,0.27,64,0.336,65,1.276,80,1.305,84,0.021,85,0.021,92,3.046,93,1.953,103,2.698,104,1.978,105,2.274,109,2.698,130,1.596,133,1.253,148,2.674,152,2.272,169,1.305,176,0.86,178,0.748,183,0.86,185,0.336,186,1.188,187,1.188,194,1,210,1.188,220,0.748,225,1.596,228,0.617,229,2.971,231,1.731,232,1.856,235,1.99,237,1.953,239,1.596,242,0.748,246,2.155,247,0.917,248,0.917,249,1.144,252,2.134,263,1.303,273,1.596,280,0.748,292,1.895,293,1.188,296,1.711,300,1.596,305,1.895,312,2.222,314,1.372,315,1.596,334,1.895,335,1.188,340,1.99,341,2.698,353,1.99,368,0.655,376,2.645,378,1.596,381,2.364,387,1.188,388,3.346,389,3.346,390,4.245,391,2.932,392,2.35,393,2.35,394,2.35,395,2.35,396,1.473,397,2.554,398,2.35,399,2.35,400,1.473,401,2.35,402,2.35,403,2.35,404,2.35,405,3.896,406,2.932,407,2.35,408,2.35,409,1.473,410,1.895,411,2.35,412,2.35,413,1.895,414,2.35,415,1.473,416,2.35,417,2.35,418,3.346,419,2.35,420,2.35,421,2.35,422,2.35,423,2.35,424,2.35,425,2.35,426,1.895,427,2.35,428,1.473,429,2.932,430,2.35,431,1.473,432,2.35,433,1.473,434,2.35,435,2.698,436,2.35,437,2.35,438,2.35,439,2.35,440,1.473,441,1.473,442,1.473,443,1.473,444,1.473,445,1.473,446,2.35,447,1.473,448,1.473,449,1.473,450,1.473,451,1.188,452,1.473,453,1.473,454,1.473,455,2.35,456,1.473,457,1.473,458,1.473,459,1.473,460,1,461,1.473,462,1.473,463,1.473,464,1.473,465,1.473,466,1.473,467,1.473,468,1.473,469,1.473,470,1.473,471,1.473,472,1.473,473,1.473,474,1.473,475,1.473,476,1.473,477,1.473,478,1.473,479,1.473]],["title/pipes/SafeUrlPipe.html",[100,1.404,368,1.229]],["body/pipes/SafeUrlPipe.html",[3,0.606,4,0.606,8,0.433,10,0.792,13,1.371,16,2.045,17,1.381,29,0.81,32,1.43,33,0.606,39,1.057,40,0.052,41,1.349,42,0.355,43,0.81,45,0.919,48,0.919,51,2.736,55,0.919,57,0.704,62,0.792,63,0.464,64,0.704,65,1.211,84,0.037,85,0.037,100,2.506,247,1.204,248,1.204,249,1.204,263,1.371,368,2.114,384,4.082,480,3.085,481,2.488,482,5.229,483,4.757,484,4.029,485,4.029,486,4.029,487,4.029,488,3.085,489,4.029,490,3.085,491,4.029,492,4.029,493,4.029,494,4.487,495,4.487,496,2.488,497,2.095,498,2.736,499,4.029,500,3.085,501,3.085]],["title/injectables/ThumbnailService.html",[228,0.726,397,1.614]],["body/injectables/ThumbnailService.html",[3,0.478,4,0.478,8,0.341,10,0.674,15,1.081,17,0.834,25,0.407,29,0.901,32,1.031,33,0.674,39,0.834,40,0.052,41,0.731,42,0.28,43,0.639,45,0.782,48,0.555,53,0.555,55,0.782,57,0.555,62,0.674,63,0.395,64,0.555,65,0.731,80,1.963,84,0.031,85,0.031,148,2.753,169,1.338,176,1.42,178,1.741,182,1.42,183,1.42,185,0.555,198,1.42,202,1.652,228,0.901,242,1.235,247,1.338,248,1.338,249,1.682,263,1.524,280,1.235,296,1.42,298,1.652,300,2.328,315,2.328,340,3.534,353,2.696,378,2.927,379,3.803,380,3.803,397,2.753,460,2.328,502,1.962,503,3.429,504,4.311,505,3.429,506,2.433,507,3.429,508,2.433,509,3.429,510,4.311,511,4.311,512,3.429,513,3.429,514,3.429,515,3.429,516,3.429,517,3.429,518,3.429,519,3.971,520,2.765,521,3.429,522,3.429,523,3.429,524,2.433,525,2.433,526,2.433,527,2.433,528,2.433,529,2.433,530,2.433,531,3.971,532,2.433,533,2.433,534,2.433,535,2.433,536,2.433,537,2.433,538,3.429,539,2.433,540,2.433,541,2.433,542,2.433,543,2.433,544,2.433,545,2.433,546,3.429,547,2.433,548,2.433,549,3.429,550,2.433,551,2.433,552,2.433,553,2.433,554,3.429,555,2.433,556,3.429,557,3.429,558,2.433,559,2.433,560,2.433,561,2.433]],["title/components/TopBarComponent.html",[0,0.831,20,1.229]],["body/components/TopBarComponent.html",[0,1.36,1,1.068,2,1.726,3,0.473,4,0.473,5,1.068,6,1.403,7,1.403,8,0.337,10,0.473,12,2.088,13,1.068,14,2.742,16,1.726,17,1.165,18,1.985,20,2.088,21,1.985,23,1.985,25,0.402,26,0.893,29,0.893,33,0.776,37,2.912,40,0.052,41,1.022,42,0.454,45,0.549,46,1.327,47,0.938,48,0.549,52,2.309,53,0.776,55,1.072,57,0.549,60,2.912,62,0.668,63,0.391,64,0.549,67,1.403,68,1.985,69,1.985,70,1.403,71,2.503,72,1.403,73,1.403,74,1.068,75,1.403,76,1.403,77,2.929,78,1.403,79,1.068,80,0.938,81,1.403,82,1.403,83,1.403,84,0.031,85,0.031,90,2.309,106,3.181,127,2.742,133,1.352,162,2.742,163,2.742,180,1.632,185,0.549,236,1.985,498,2.678,562,3.459,563,1.939,564,3.4,565,4.289,566,3.4,567,3.4,568,3.459,569,3.945,570,3.945,571,3.945,572,3.4,573,3.4,574,3.459,575,3.945,576,3.459,577,3.4,578,4.525,579,2.404,580,4.289,581,3.4,582,2.404,583,3.4,584,2.404,585,3.945,586,3.4,587,1.939,588,2.404,589,2.404,590,2.742,591,1.939,592,1.939,593,2.404,594,2.404,595,2.404,596,2.404,597,2.404,598,2.404]],["title/components/VideoPlayerComponent.html",[0,0.831,79,1.229]],["body/components/VideoPlayerComponent.html",[0,1.261,1,0.884,2,1.504,3,0.391,4,0.391,5,0.884,6,1.161,7,1.161,8,0.279,10,0.696,12,1.955,13,0.884,14,2.568,16,1.504,17,1.015,18,1.729,20,0.884,21,1.729,23,1.729,25,0.333,26,0.778,29,0.778,33,0.896,39,0.682,40,0.052,41,1.064,42,0.524,43,0.93,45,0.454,46,1.156,47,1.381,48,0.808,53,1.004,55,1.068,56,1.35,57,0.454,62,0.582,63,0.341,64,0.454,65,0.89,67,1.161,68,1.729,69,1.729,70,1.161,71,2.29,72,1.161,73,1.161,74,0.884,75,1.161,76,1.161,77,1.161,78,1.161,79,2.224,80,1.867,81,2.449,82,1.161,83,1.161,84,0.027,85,0.027,90,2.011,96,3.859,98,2.855,100,1.797,118,1.992,125,3.547,133,1.015,140,2.389,141,2.389,178,1.01,180,1.35,182,1.161,185,0.454,191,1.604,192,1.35,193,1.604,194,1.35,195,3.179,246,1.01,247,1.156,248,1.974,249,1.156,267,2.664,268,2.011,298,2.011,312,1.992,498,2.404,568,3.164,574,2.389,576,3.164,590,2.855,591,1.604,592,1.604,599,3.776,600,1.604,601,2.962,602,2.962,603,4.195,604,3.54,605,1.989,606,4.399,607,1.989,608,2.962,609,2.962,610,1.989,611,3.923,612,1.989,613,2.962,614,1.989,615,2.962,616,1.989,617,1.989,618,2.962,619,2.962,620,2.962,621,2.962,622,2.962,623,2.962,624,1.989,625,2.962,626,1.989,627,1.989,628,1.989,629,1.989,630,1.989,631,1.989]],["title/coverage.html",[632,3.021]],["body/coverage.html",[0,1.478,1,1.497,8,0.473,9,2.717,20,1.497,40,0.051,42,0.388,53,0.769,60,2.287,63,0.491,74,1.497,79,1.497,84,0.039,85,0.039,86,2.717,87,2.717,88,2.717,100,1.71,104,1.71,105,1.967,133,1.155,195,2.287,216,1.71,217,1.967,219,2.489,220,2.165,221,2.489,228,1.291,232,1.71,289,2.717,290,2.717,312,1.71,313,2.717,368,1.497,373,2.717,387,2.717,397,1.967,460,2.287,481,2.717,502,2.717,562,2.717,563,2.717,599,2.717,600,2.717,632,2.717,633,2.717,634,3.369,635,3.369,636,4.678,637,4.264,638,2.717,639,3.369,640,2.717,641,3.369,642,3.369,643,3.369,644,3.369,645,5.325,646,3.369,647,4.678,648,4.264,649,3.369,650,3.369,651,3.369,652,3.369]],["title/dependencies.html",[653,1.873,654,2.675]],["body/dependencies.html",[40,0.051,57,0.862,58,3.048,84,0.042,85,0.042,185,0.862,192,2.566,376,2.566,496,3.692,497,3.109,587,3.048,654,3.048,655,3.78,656,4.388,657,3.78,658,3.78,659,3.78,660,3.78,661,3.78,662,3.78,663,3.78,664,3.78,665,3.78,666,3.78,667,3.048,668,3.78,669,3.78,670,3.78,671,3.78,672,3.78]],["title/index.html",[25,0.389,520,1.873,673,2.322]],["body/index.html",[8,0.663,12,1.345,13,1.345,40,0.036,51,2.701,52,3.206,53,1.149,80,1.181,84,0.036,85,0.036,89,2.44,92,2.055,93,2.322,130,2.055,169,1.181,170,2.44,172,2.44,185,0.691,213,1.766,231,1.345,236,2.322,237,2.322,238,3.018,240,2.701,241,1.766,246,2.257,252,2.322,265,2.055,294,2.44,296,2.322,310,2.055,314,1.766,327,3.808,329,3.208,410,2.44,413,2.44,426,2.44,435,2.44,451,3.208,497,2.055,633,3.208,656,2.44,667,2.44,674,3.026,675,3.026,676,3.026,677,3.026,678,3.026,679,3.026,680,3.026,681,3.026,682,3.026,683,3.026,684,3.026,685,3.026,686,3.979,687,3.026,688,3.026,689,3.026,690,3.026,691,3.026,692,3.026,693,3.026,694,4.445,695,3.026,696,3.026,697,3.979,698,3.026,699,3.979,700,3.026,701,3.026,702,3.026,703,3.026,704,3.026,705,3.026,706,3.026,707,3.026,708,3.026,709,3.026,710,3.026,711,3.979,712,4.445,713,3.979,714,3.979,715,3.979,716,3.026,717,3.026,718,3.026,719,3.026,720,3.026,721,3.026,722,3.026,723,3.026,724,3.026,725,3.026,726,3.026,727,3.026,728,3.979,729,3.026,730,3.026,731,3.026,732,3.979,733,3.026,734,3.026,735,3.026,736,3.026,737,3.026,738,3.026]],["title/modules.html",[739,3.021]],["body/modules.html",[40,0.046,84,0.046,85,0.046,739,3.524]],["title/overview.html",[740,3.021]],["body/overview.html",[2,2.153,40,0.045,84,0.045,85,0.045,216,2.153,280,2.153,288,2.879,368,1.884,740,3.42,741,4.901,742,4.901,743,4.24]],["title/properties.html",[26,0.871,653,1.873]],["body/properties.html",[26,1.137,40,0.048,84,0.045,85,0.045,744,4.331,745,4.331]],["title/miscellaneous/typealiases.html",[746,1.356,747,3.318]],["body/miscellaneous/typealiases.html",[25,0.704,40,0.047,42,0.484,84,0.045,85,0.045,219,2.453,220,2.134,221,2.846,230,3.311,231,2.167,746,2.453,748,4.203,749,4.203]],["title/miscellaneous/variables.html",[746,1.356,750,2.675]],["body/miscellaneous/variables.html",[25,0.693,40,0.05,42,0.477,47,1.616,48,0.945,84,0.044,85,0.044,95,3.34,638,3.34,640,3.899,746,2.418,750,3.34,751,4.142,752,4.142,753,4.142,754,4.142,755,4.142]]],"invertedIndex":[["",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"classes/OngoingRecording.html":{},"injectables/OpfsService.html":{},"classes/Recording.html":{},"injectables/RecordingService.html":{},"pipes/SafeUrlPipe.html":{},"injectables/ThumbnailService.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":460,"title":{},"body":{"injectables/RecordingService.html":{},"injectables/ThumbnailService.html":{},"coverage.html":{}}}],["0.0.0",{"_index":745,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":672,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":641,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":742,"title":{},"body":{"overview.html":{}}}],["1/1",{"_index":648,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":645,"title":{},"body":{"coverage.html":{}}}],["17.12.0",{"_index":666,"title":{},"body":{"dependencies.html":{}}}],["17.3.0",{"_index":656,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["1e101",{"_index":545,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["2",{"_index":743,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":669,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":662,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":650,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":637,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":741,"title":{},"body":{"overview.html":{}}}],["5",{"_index":556,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["5.4.2",{"_index":689,"title":{},"body":{"index.html":{}}}],["5/5",{"_index":646,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":644,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":647,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":643,"title":{},"body":{"coverage.html":{}}}],["7.0.0",{"_index":664,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":667,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["75",{"_index":636,"title":{},"body":{"coverage.html":{}}}],["9.0.1",{"_index":670,"title":{},"body":{"dependencies.html":{}}}],["9.0.8",{"_index":660,"title":{},"body":{"dependencies.html":{}}}],["9/12",{"_index":642,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":649,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":212,"title":{},"body":{"components/HomePageComponent.html":{}}}],["accessors",{"_index":112,"title":{},"body":{"components/HomePageComponent.html":{}}}],["actual_component",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["added",{"_index":407,"title":{},"body":{"injectables/RecordingService.html":{}}}],["addrecording",{"_index":392,"title":{},"body":{"injectables/RecordingService.html":{}}}],["addrecording(recordingtoadd",{"_index":399,"title":{},"body":{"injectables/RecordingService.html":{}}}],["adds",{"_index":402,"title":{},"body":{"injectables/RecordingService.html":{}}}],["aliases",{"_index":748,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":541,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["already",{"_index":244,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"classes/Recording.html":{}}}],["angular",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"pipes/SafeUrlPipe.html":{},"index.html":{}}}],["angular/animations",{"_index":655,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":192,"title":{},"body":{"components/HomePageComponent.html":{},"components/VideoPlayerComponent.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":657,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"injectables/OpfsService.html":{},"injectables/RecordingService.html":{},"pipes/SafeUrlPipe.html":{},"injectables/ThumbnailService.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{},"dependencies.html":{}}}],["angular/core/rxjs",{"_index":591,"title":{},"body":{"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["angular/forms",{"_index":587,"title":{},"body":{"components/TopBarComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":496,"title":{},"body":{"pipes/SafeUrlPipe.html":{},"dependencies.html":{}}}],["angular/router",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["angularscreenrecording",{"_index":674,"title":{},"body":{"index.html":{}}}],["api",{"_index":238,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"index.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"injectables/OpfsService.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{},"index.html":{}}}],["app.component.html",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["app/tab",{"_index":722,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":640,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appending",{"_index":518,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["application",{"_index":676,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applied",{"_index":164,"title":{},"body":{"components/HomePageComponent.html":{}}}],["asks",{"_index":325,"title":{},"body":{"injectables/OpfsService.html":{}}}],["audio",{"_index":451,"title":{},"body":{"injectables/RecordingService.html":{},"index.html":{}}}],["available",{"_index":267,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"components/VideoPlayerComponent.html":{}}}],["bad",{"_index":543,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["bar",{"_index":565,"title":{},"body":{"components/TopBarComponent.html":{}}}],["bar'},{'name",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["bar.component",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["bar.component.html",{"_index":572,"title":{},"body":{"components/TopBarComponent.html":{}}}],["bar.component.scss",{"_index":573,"title":{},"body":{"components/TopBarComponent.html":{}}}],["bar.component.ts",{"_index":563,"title":{},"body":{"components/TopBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:31",{"_index":579,"title":{},"body":{"components/TopBarComponent.html":{}}}],["bar.component.ts:39",{"_index":584,"title":{},"body":{"components/TopBarComponent.html":{}}}],["bar.component.ts:41",{"_index":582,"title":{},"body":{"components/TopBarComponent.html":{}}}],["bar/top",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/TopBarComponent.html":{},"coverage.html":{}}}],["base64",{"_index":378,"title":{},"body":{"classes/Recording.html":{},"injectables/RecordingService.html":{},"injectables/ThumbnailService.html":{}}}],["base64thumbnail",{"_index":374,"title":{},"body":{"classes/Recording.html":{}}}],["based",{"_index":504,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["behaviorsubject",{"_index":118,"title":{},"body":{"components/HomePageComponent.html":{},"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"classes/OngoingRecording.html":{},"components/VideoPlayerComponent.html":{}}}],["behaviorsubject(!!localstorage.getitem(key",{"_index":271,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{}}}],["behaviorsubject(false",{"_index":301,"title":{},"body":{"classes/OngoingRecording.html":{}}}],["behaviorsubject(null",{"_index":134,"title":{},"body":{"components/HomePageComponent.html":{}}}],["behaviorsubject(undefined",{"_index":615,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["behaviorsubject(value",{"_index":264,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{}}}],["behavioursubject",{"_index":438,"title":{},"body":{"injectables/RecordingService.html":{}}}],["blank",{"_index":171,"title":{},"body":{"components/HomePageComponent.html":{}}}],["blob",{"_index":340,"title":{},"body":{"injectables/OpfsService.html":{},"injectables/RecordingService.html":{},"injectables/ThumbnailService.html":{}}}],["blob(currentrecording.chunks",{"_index":472,"title":{},"body":{"injectables/RecordingService.html":{}}}],["blob.arraybuffer",{"_index":367,"title":{},"body":{"injectables/OpfsService.html":{}}}],["blobs",{"_index":727,"title":{},"body":{"index.html":{}}}],["bool",{"_index":144,"title":{},"body":{"components/HomePageComponent.html":{}}}],["boolean",{"_index":150,"title":{},"body":{"components/HomePageComponent.html":{}}}],["bottom",{"_index":713,"title":{},"body":{"index.html":{}}}],["browse",{"_index":707,"title":{},"body":{"index.html":{}}}],["browser",{"_index":497,"title":{},"body":{"pipes/SafeUrlPipe.html":{},"dependencies.html":{},"index.html":{}}}],["buffer",{"_index":370,"title":{},"body":{"injectables/OpfsService.html":{}}}],["bug",{"_index":532,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["button",{"_index":712,"title":{},"body":{"index.html":{}}}],["cache",{"_index":223,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{}}}],["call",{"_index":308,"title":{},"body":{"classes/OngoingRecording.html":{}}}],["called",{"_index":306,"title":{},"body":{"classes/OngoingRecording.html":{}}}],["canvas",{"_index":519,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["canvas.getcontext('2d",{"_index":553,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["canvas.height",{"_index":557,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["canvas.todataurl(\"image/jpeg",{"_index":561,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["canvas.width",{"_index":554,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["capturing",{"_index":700,"title":{},"body":{"index.html":{}}}],["cardmodule",{"_index":99,"title":{},"body":{"components/HomePageComponent.html":{}}}],["changedetectorref",{"_index":174,"title":{},"body":{"components/HomePageComponent.html":{}}}],["choose",{"_index":718,"title":{},"body":{"index.html":{}}}],["chrome",{"_index":531,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["chunks",{"_index":292,"title":{},"body":{"classes/OngoingRecording.html":{},"injectables/RecordingService.html":{}}}],["class",{"_index":63,"title":{"classes/OngoingRecording.html":{},"classes/Recording.html":{}},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"classes/OngoingRecording.html":{},"injectables/OpfsService.html":{},"classes/Recording.html":{},"injectables/RecordingService.html":{},"pipes/SafeUrlPipe.html":{},"injectables/ThumbnailService.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{},"coverage.html":{}}}],["classes",{"_index":288,"title":{},"body":{"classes/OngoingRecording.html":{},"classes/Recording.html":{},"overview.html":{}}}],["clients",{"_index":329,"title":{},"body":{"injectables/OpfsService.html":{},"index.html":{}}}],["code",{"_index":706,"title":{},"body":{"index.html":{}}}],["combinelatest",{"_index":176,"title":{},"body":{"components/HomePageComponent.html":{},"injectables/OpfsService.html":{},"injectables/RecordingService.html":{},"injectables/ThumbnailService.html":{}}}],["combinelatest([fromevent(video",{"_index":547,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["combinelatest([this.getfile$(filetoexportpath",{"_index":359,"title":{},"body":{"injectables/OpfsService.html":{}}}],["combinelatest([this.getfilewriterstream$(filepath",{"_index":366,"title":{},"body":{"injectables/OpfsService.html":{}}}],["combinelatest([this.opfsservice.savefileopfs$(blob",{"_index":473,"title":{},"body":{"injectables/RecordingService.html":{}}}],["combinelatest([this.recordingservice.recordings",{"_index":153,"title":{},"body":{"components/HomePageComponent.html":{}}}],["comically",{"_index":535,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["comments",{"_index":705,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":98,"title":{},"body":{"components/HomePageComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["complete",{"_index":425,"title":{},"body":{"injectables/RecordingService.html":{}}}],["completed",{"_index":419,"title":{},"body":{"injectables/RecordingService.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{},"overview.html":{}}}],["components/top",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["const",{"_index":353,"title":{},"body":{"injectables/OpfsService.html":{},"injectables/RecordingService.html":{},"injectables/ThumbnailService.html":{}}}],["constructor",{"_index":249,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"injectables/OpfsService.html":{},"injectables/RecordingService.html":{},"pipes/SafeUrlPipe.html":{},"injectables/ThumbnailService.html":{},"components/VideoPlayerComponent.html":{}}}],["constructor(localstorage",{"_index":396,"title":{},"body":{"injectables/RecordingService.html":{}}}],["constructor(private",{"_index":500,"title":{},"body":{"pipes/SafeUrlPipe.html":{}}}],["constructor(public",{"_index":627,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["constructor(ref",{"_index":605,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["containing",{"_index":169,"title":{},"body":{"components/HomePageComponent.html":{},"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"injectables/OpfsService.html":{},"injectables/RecordingService.html":{},"injectables/ThumbnailService.html":{},"index.html":{}}}],["contains",{"_index":90,"title":{},"body":{"components/HomePageComponent.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["contaning",{"_index":243,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{}}}],["converts",{"_index":422,"title":{},"body":{"injectables/RecordingService.html":{}}}],["corner",{"_index":715,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":632,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":349,"title":{},"body":{"injectables/OpfsService.html":{}}}],["created",{"_index":94,"title":{},"body":{"components/HomePageComponent.html":{},"classes/Recording.html":{}}}],["creates",{"_index":247,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"injectables/OpfsService.html":{},"injectables/RecordingService.html":{},"pipes/SafeUrlPipe.html":{},"injectables/ThumbnailService.html":{},"components/VideoPlayerComponent.html":{}}}],["creating",{"_index":513,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["creation",{"_index":404,"title":{},"body":{"injectables/RecordingService.html":{}}}],["ctx",{"_index":552,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["ctx?.drawimage(video",{"_index":559,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["current",{"_index":298,"title":{},"body":{"classes/OngoingRecording.html":{},"injectables/ThumbnailService.html":{},"components/VideoPlayerComponent.html":{}}}],["currentrecording",{"_index":103,"title":{},"body":{"components/HomePageComponent.html":{},"injectables/RecordingService.html":{}}}],["currentrecording.chunks.push(e.data",{"_index":461,"title":{},"body":{"injectables/RecordingService.html":{}}}],["currentrecording.mediarecorder",{"_index":468,"title":{},"body":{"injectables/RecordingService.html":{}}}],["currentrecording.stopped$.next(true",{"_index":465,"title":{},"body":{"injectables/RecordingService.html":{}}}],["data",{"_index":213,"title":{},"body":{"components/HomePageComponent.html":{},"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"index.html":{}}}],["database",{"_index":693,"title":{},"body":{"index.html":{}}}],["datachunks",{"_index":297,"title":{},"body":{"classes/OngoingRecording.html":{}}}],["date",{"_index":381,"title":{},"body":{"classes/Recording.html":{},"injectables/RecordingService.html":{}}}],["db",{"_index":405,"title":{},"body":{"injectables/RecordingService.html":{}}}],["debouncetime",{"_index":593,"title":{},"body":{"components/TopBarComponent.html":{}}}],["default",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"classes/OngoingRecording.html":{},"injectables/RecordingService.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"classes/OngoingRecording.html":{},"injectables/OpfsService.html":{},"classes/Recording.html":{},"injectables/RecordingService.html":{},"pipes/SafeUrlPipe.html":{},"injectables/ThumbnailService.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["delete",{"_index":276,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{}}}],["deletes",{"_index":273,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"injectables/RecordingService.html":{}}}],["dependencies",{"_index":654,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"classes/OngoingRecording.html":{},"injectables/OpfsService.html":{},"classes/Recording.html":{},"injectables/RecordingService.html":{},"pipes/SafeUrlPipe.html":{},"injectables/ThumbnailService.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["dev",{"_index":703,"title":{},"body":{"index.html":{}}}],["device",{"_index":330,"title":{},"body":{"injectables/OpfsService.html":{}}}],["devices",{"_index":701,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":125,"title":{},"body":{"components/HomePageComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["dialogservice",{"_index":96,"title":{},"body":{"components/HomePageComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["directive",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["directives",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["docs",{"_index":737,"title":{},"body":{"index.html":{}}}],["document.createelement(\"canvas",{"_index":525,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["document.createelement(\"video",{"_index":526,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["documentation",{"_index":633,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documetation",{"_index":702,"title":{},"body":{"index.html":{}}}],["doesn't",{"_index":538,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["domsanitizer",{"_index":495,"title":{},"body":{"pipes/SafeUrlPipe.html":{}}}],["done",{"_index":172,"title":{},"body":{"components/HomePageComponent.html":{},"index.html":{}}}],["due",{"_index":530,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["dynamic",{"_index":658,"title":{},"body":{"dependencies.html":{}}}],["dynamicdialogcomponent",{"_index":611,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["dynamicdialogmodule",{"_index":190,"title":{},"body":{"components/HomePageComponent.html":{}}}],["dynamicdialogref",{"_index":606,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["e",{"_index":458,"title":{},"body":{"injectables/RecordingService.html":{}}}],["e.data.size",{"_index":459,"title":{},"body":{"injectables/RecordingService.html":{}}}],["element",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["emits",{"_index":303,"title":{},"body":{"classes/OngoingRecording.html":{}}}],["emitting",{"_index":159,"title":{},"body":{"components/HomePageComponent.html":{}}}],["emmiting",{"_index":149,"title":{},"body":{"components/HomePageComponent.html":{}}}],["emmits",{"_index":581,"title":{},"body":{"components/TopBarComponent.html":{}}}],["eventemitter",{"_index":578,"title":{},"body":{"components/TopBarComponent.html":{}}}],["expected",{"_index":256,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{}}}],["export",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"classes/OngoingRecording.html":{},"injectables/OpfsService.html":{},"classes/Recording.html":{},"injectables/RecordingService.html":{},"pipes/SafeUrlPipe.html":{},"injectables/ThumbnailService.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["exported",{"_index":728,"title":{},"body":{"index.html":{}}}],["exportfile",{"_index":318,"title":{},"body":{"injectables/OpfsService.html":{}}}],["exportfile$(filetoexportpath",{"_index":323,"title":{},"body":{"injectables/OpfsService.html":{}}}],["exportrecoding",{"_index":393,"title":{},"body":{"injectables/RecordingService.html":{}}}],["exportrecoding$(recording",{"_index":408,"title":{},"body":{"injectables/RecordingService.html":{}}}],["exportrecording",{"_index":107,"title":{},"body":{"components/HomePageComponent.html":{}}}],["exportrecording(recording",{"_index":119,"title":{},"body":{"components/HomePageComponent.html":{}}}],["exports",{"_index":410,"title":{},"body":{"injectables/RecordingService.html":{},"index.html":{}}}],["external",{"_index":484,"title":{},"body":{"pipes/SafeUrlPipe.html":{}}}],["field",{"_index":567,"title":{},"body":{"components/TopBarComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"classes/OngoingRecording.html":{},"injectables/OpfsService.html":{},"classes/Recording.html":{},"injectables/RecordingService.html":{},"pipes/SafeUrlPipe.html":{},"injectables/ThumbnailService.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{},"coverage.html":{},"index.html":{}}}],["filehandler.close",{"_index":372,"title":{},"body":{"injectables/OpfsService.html":{}}}],["filehandler.write(buffer",{"_index":371,"title":{},"body":{"injectables/OpfsService.html":{}}}],["filename",{"_index":341,"title":{},"body":{"injectables/OpfsService.html":{},"injectables/RecordingService.html":{}}}],["filepath",{"_index":335,"title":{},"body":{"injectables/OpfsService.html":{},"injectables/RecordingService.html":{}}}],["filepath?.length",{"_index":476,"title":{},"body":{"injectables/RecordingService.html":{}}}],["filepicker.createwritable",{"_index":358,"title":{},"body":{"injectables/OpfsService.html":{}}}],["filesave",{"_index":424,"title":{},"body":{"injectables/RecordingService.html":{}}}],["filesystem",{"_index":732,"title":{},"body":{"index.html":{}}}],["filesystemwritablefilestream",{"_index":338,"title":{},"body":{"injectables/OpfsService.html":{}}}],["filetoexportpath",{"_index":331,"title":{},"body":{"injectables/OpfsService.html":{}}}],["filetoexportpath})).pipe",{"_index":356,"title":{},"body":{"injectables/OpfsService.html":{}}}],["fileurl",{"_index":375,"title":{},"body":{"classes/Recording.html":{}}}],["filewritable",{"_index":354,"title":{},"body":{"injectables/OpfsService.html":{}}}],["filewritable$]).pipe",{"_index":360,"title":{},"body":{"injectables/OpfsService.html":{}}}],["filter",{"_index":177,"title":{},"body":{"components/HomePageComponent.html":{}}}],["filter(rec",{"_index":139,"title":{},"body":{"components/HomePageComponent.html":{}}}],["filtering",{"_index":162,"title":{},"body":{"components/HomePageComponent.html":{},"components/TopBarComponent.html":{}}}],["flex",{"_index":691,"title":{},"body":{"index.html":{}}}],["format",{"_index":241,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"injectables/OpfsService.html":{},"index.html":{}}}],["formcontrol",{"_index":585,"title":{},"body":{"components/TopBarComponent.html":{}}}],["formcontrol(null",{"_index":583,"title":{},"body":{"components/TopBarComponent.html":{}}}],["frame",{"_index":511,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["from(filehandler.createwritable",{"_index":351,"title":{},"body":{"injectables/OpfsService.html":{}}}],["from(filehandler.getfile",{"_index":352,"title":{},"body":{"injectables/OpfsService.html":{}}}],["from(navigator.mediadevices.getdisplaymedia",{"_index":450,"title":{},"body":{"injectables/RecordingService.html":{}}}],["from(navigator.storage.getdirectory()).pipe",{"_index":346,"title":{},"body":{"injectables/OpfsService.html":{}}}],["from(root.getfilehandle(filepath",{"_index":348,"title":{},"body":{"injectables/OpfsService.html":{}}}],["from(savefile.close",{"_index":365,"title":{},"body":{"injectables/OpfsService.html":{}}}],["from(window.showsavefilepicker({suggestedname",{"_index":355,"title":{},"body":{"injectables/OpfsService.html":{}}}],["fromevent",{"_index":524,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["fromevent(video",{"_index":549,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["function",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"classes/OngoingRecording.html":{},"injectables/RecordingService.html":{}}}],["further",{"_index":734,"title":{},"body":{"index.html":{}}}],["generated",{"_index":523,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["generates",{"_index":509,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["generatethumbnail",{"_index":505,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["generatethumbnail$(blob",{"_index":507,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["generating",{"_index":503,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["getfile",{"_index":319,"title":{},"body":{"injectables/OpfsService.html":{}}}],["getfile$(filepath",{"_index":332,"title":{},"body":{"injectables/OpfsService.html":{}}}],["getfilewriterstream",{"_index":320,"title":{},"body":{"injectables/OpfsService.html":{}}}],["getfilewriterstream$(filepath",{"_index":336,"title":{},"body":{"injectables/OpfsService.html":{}}}],["getitem",{"_index":281,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getitem(key",{"_index":270,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{}}}],["gets",{"_index":265,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"index.html":{}}}],["getting",{"_index":520,"title":{"index.html":{}},"body":{"injectables/ThumbnailService.html":{}}}],["give",{"_index":421,"title":{},"body":{"injectables/RecordingService.html":{}}}],["guaranteed",{"_index":682,"title":{},"body":{"index.html":{}}}],["header",{"_index":209,"title":{},"body":{"components/HomePageComponent.html":{}}}],["here",{"_index":708,"title":{},"body":{"index.html":{}}}],["home",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["homepagecomponent",{"_index":74,"title":{"components/HomePageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{},"coverage.html":{}}}],["html",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["icache",{"_index":217,"title":{"interfaces/ICache.html":{}},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["id",{"_index":403,"title":{},"body":{"injectables/RecordingService.html":{}}}],["identifier",{"_index":634,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":521,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["implements",{"_index":498,"title":{},"body":{"pipes/SafeUrlPipe.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["import",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"classes/OngoingRecording.html":{},"injectables/OpfsService.html":{},"injectables/RecordingService.html":{},"pipes/SafeUrlPipe.html":{},"injectables/ThumbnailService.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["imports",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["incoming",{"_index":491,"title":{},"body":{"pipes/SafeUrlPipe.html":{}}}],["index",{"_index":25,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"injectables/LocalStorageService.html":{},"classes/OngoingRecording.html":{},"injectables/OpfsService.html":{},"classes/Recording.html":{},"injectables/RecordingService.html":{},"injectables/ThumbnailService.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":226,"title":{},"body":{"interfaces/ICache.html":{}}}],["indicating",{"_index":151,"title":{},"body":{"components/HomePageComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"classes/OngoingRecording.html":{},"injectables/OpfsService.html":{},"classes/Recording.html":{},"injectables/RecordingService.html":{},"pipes/SafeUrlPipe.html":{},"injectables/ThumbnailService.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["information",{"_index":436,"title":{},"body":{"injectables/RecordingService.html":{}}}],["initializes",{"_index":716,"title":{},"body":{"index.html":{}}}],["initiate",{"_index":417,"title":{},"body":{"injectables/RecordingService.html":{}}}],["initiated",{"_index":609,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["initiates",{"_index":121,"title":{},"body":{"components/HomePageComponent.html":{}}}],["inject",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["inject(dialogservice",{"_index":136,"title":{},"body":{"components/HomePageComponent.html":{}}}],["inject(opfsservice",{"_index":613,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["inject(recordingservice",{"_index":166,"title":{},"body":{"components/HomePageComponent.html":{}}}],["inject(router",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["injectable",{"_index":228,"title":{"injectables/LocalStorageService.html":{},"injectables/OpfsService.html":{},"injectables/RecordingService.html":{},"injectables/ThumbnailService.html":{}},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"injectables/OpfsService.html":{},"injectables/RecordingService.html":{},"injectables/ThumbnailService.html":{},"coverage.html":{}}}],["injectables",{"_index":280,"title":{},"body":{"injectables/LocalStorageService.html":{},"injectables/OpfsService.html":{},"injectables/RecordingService.html":{},"injectables/ThumbnailService.html":{},"overview.html":{}}}],["input",{"_index":116,"title":{},"body":{"components/HomePageComponent.html":{}}}],["inputs",{"_index":111,"title":{},"body":{"components/HomePageComponent.html":{}}}],["inputtextmodule",{"_index":571,"title":{},"body":{"components/TopBarComponent.html":{}}}],["instance",{"_index":248,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"injectables/OpfsService.html":{},"injectables/RecordingService.html":{},"pipes/SafeUrlPipe.html":{},"injectables/ThumbnailService.html":{},"components/VideoPlayerComponent.html":{}}}],["interacting",{"_index":234,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{}}}],["interface",{"_index":216,"title":{"interfaces/ICache.html":{}},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":218,"title":{},"body":{"interfaces/ICache.html":{}}}],["interop",{"_index":592,"title":{},"body":{"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["item",{"_index":274,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{}}}],["jpeg",{"_index":379,"title":{},"body":{"classes/Recording.html":{},"injectables/ThumbnailService.html":{}}}],["jsdoc",{"_index":704,"title":{},"body":{"index.html":{}}}],["json",{"_index":240,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"index.html":{}}}],["json.parse(localstorage.getitem(key",{"_index":272,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{}}}],["json.stringify(value",{"_index":260,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{}}}],["key",{"_index":225,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"injectables/RecordingService.html":{}}}],["large",{"_index":536,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["last",{"_index":510,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["legend",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["list",{"_index":91,"title":{},"body":{"components/HomePageComponent.html":{}}}],["loadeddata",{"_index":548,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["loadedmetadata",{"_index":550,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["loading",{"_index":515,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["local",{"_index":252,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"injectables/RecordingService.html":{},"index.html":{}}}],["local_storage_key",{"_index":391,"title":{},"body":{"injectables/RecordingService.html":{}}}],["locally",{"_index":684,"title":{},"body":{"index.html":{}}}],["localstorage",{"_index":235,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"injectables/RecordingService.html":{}}}],["localstorage.removeitem(key",{"_index":278,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{}}}],["localstorage.setitem(key",{"_index":259,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{}}}],["localstorageservice",{"_index":232,"title":{"injectables/LocalStorageService.html":{}},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"injectables/RecordingService.html":{},"coverage.html":{}}}],["location",{"_index":413,"title":{},"body":{"injectables/RecordingService.html":{},"index.html":{}}}],["made",{"_index":160,"title":{},"body":{"components/HomePageComponent.html":{}}}],["main",{"_index":11,"title":{},"body":{"components/AppComponent.html":{}}}],["map",{"_index":178,"title":{},"body":{"components/HomePageComponent.html":{},"injectables/OpfsService.html":{},"injectables/RecordingService.html":{},"injectables/ThumbnailService.html":{},"components/VideoPlayerComponent.html":{}}}],["map(([recordings",{"_index":155,"title":{},"body":{"components/HomePageComponent.html":{}}}],["map(bool",{"_index":143,"title":{},"body":{"components/HomePageComponent.html":{}}}],["map(file",{"_index":622,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["map(mediarecorder",{"_index":456,"title":{},"body":{"injectables/RecordingService.html":{}}}],["map(stream",{"_index":452,"title":{},"body":{"injectables/RecordingService.html":{}}}],["mapped",{"_index":224,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{}}}],["mark",{"_index":493,"title":{},"body":{"pipes/SafeUrlPipe.html":{}}}],["marks",{"_index":483,"title":{},"body":{"pipes/SafeUrlPipe.html":{}}}],["matching",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"classes/OngoingRecording.html":{},"injectables/OpfsService.html":{},"classes/Recording.html":{},"injectables/RecordingService.html":{},"pipes/SafeUrlPipe.html":{},"injectables/ThumbnailService.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.floor(video.videoheight",{"_index":558,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["math.floor(video.videowidth",{"_index":555,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["mdn",{"_index":736,"title":{},"body":{"index.html":{}}}],["mediadevices",{"_index":699,"title":{},"body":{"index.html":{}}}],["mediarecorder",{"_index":293,"title":{},"body":{"classes/OngoingRecording.html":{},"injectables/RecordingService.html":{}}}],["mediarecorder(stream",{"_index":453,"title":{},"body":{"injectables/RecordingService.html":{}}}],["mediarecorder.ondataavailable",{"_index":457,"title":{},"body":{"injectables/RecordingService.html":{}}}],["mediarecorder.onstop",{"_index":462,"title":{},"body":{"injectables/RecordingService.html":{}}}],["mediarecorder.start(250",{"_index":469,"title":{},"body":{"injectables/RecordingService.html":{}}}],["mediarecorder.stream.gettracks().foreach(t",{"_index":466,"title":{},"body":{"injectables/RecordingService.html":{}}}],["menu",{"_index":564,"title":{},"body":{"components/TopBarComponent.html":{}}}],["menubarmodule",{"_index":569,"title":{},"body":{"components/TopBarComponent.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"pipes/SafeUrlPipe.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{},"index.html":{}}}],["methods",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"injectables/LocalStorageService.html":{},"classes/OngoingRecording.html":{},"injectables/OpfsService.html":{},"injectables/RecordingService.html":{},"pipes/SafeUrlPipe.html":{},"injectables/ThumbnailService.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["mimetype",{"_index":454,"title":{},"body":{"injectables/RecordingService.html":{}}}],["miscellaneous",{"_index":746,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["models/ongoing",{"_index":186,"title":{},"body":{"components/HomePageComponent.html":{},"injectables/RecordingService.html":{}}}],["models/recording.class",{"_index":194,"title":{},"body":{"components/HomePageComponent.html":{},"injectables/RecordingService.html":{},"components/VideoPlayerComponent.html":{}}}],["modules",{"_index":739,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["mp4",{"_index":542,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/OpfsService.html":{},"injectables/RecordingService.html":{},"pipes/SafeUrlPipe.html":{},"injectables/ThumbnailService.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["navigates",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["need",{"_index":533,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["needed",{"_index":254,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{}}}],["needs",{"_index":426,"title":{},"body":{"injectables/RecordingService.html":{},"index.html":{}}}],["new",{"_index":133,"title":{},"body":{"components/HomePageComponent.html":{},"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"classes/OngoingRecording.html":{},"injectables/RecordingService.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{},"coverage.html":{}}}],["ngoninit",{"_index":576,"title":{},"body":{"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["ngzone",{"_index":229,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"injectables/RecordingService.html":{}}}],["noop",{"_index":439,"title":{},"body":{"injectables/RecordingService.html":{}}}],["now",{"_index":725,"title":{},"body":{"index.html":{}}}],["null",{"_index":113,"title":{},"body":{"components/HomePageComponent.html":{}}}],["object",{"_index":231,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"classes/OngoingRecording.html":{},"injectables/RecordingService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["obs",{"_index":546,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["observable",{"_index":148,"title":{},"body":{"components/HomePageComponent.html":{},"injectables/OpfsService.html":{},"injectables/RecordingService.html":{},"injectables/ThumbnailService.html":{}}}],["once",{"_index":305,"title":{},"body":{"classes/OngoingRecording.html":{},"injectables/RecordingService.html":{}}}],["ongoing",{"_index":152,"title":{},"body":{"components/HomePageComponent.html":{},"classes/OngoingRecording.html":{},"injectables/RecordingService.html":{}}}],["ongoingrecording",{"_index":104,"title":{"classes/OngoingRecording.html":{}},"body":{"components/HomePageComponent.html":{},"classes/OngoingRecording.html":{},"injectables/RecordingService.html":{},"coverage.html":{}}}],["oninit",{"_index":568,"title":{},"body":{"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["onrecordingcomplete",{"_index":394,"title":{},"body":{"injectables/RecordingService.html":{}}}],["onrecordingcomplete(currentrecording",{"_index":414,"title":{},"body":{"injectables/RecordingService.html":{}}}],["onsearchterm",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["onsearchterm(search",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["opens",{"_index":124,"title":{},"body":{"components/HomePageComponent.html":{}}}],["operations",{"_index":317,"title":{},"body":{"injectables/OpfsService.html":{}}}],["opfs",{"_index":314,"title":{},"body":{"injectables/OpfsService.html":{},"classes/Recording.html":{},"injectables/RecordingService.html":{},"index.html":{}}}],["opfs)/filesystem",{"_index":695,"title":{},"body":{"index.html":{}}}],["opfs/opfs.service",{"_index":442,"title":{},"body":{"injectables/RecordingService.html":{}}}],["opfsservice",{"_index":312,"title":{"injectables/OpfsService.html":{}},"body":{"injectables/OpfsService.html":{},"injectables/RecordingService.html":{},"components/VideoPlayerComponent.html":{},"coverage.html":{}}}],["optional",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"injectables/LocalStorageService.html":{},"classes/OngoingRecording.html":{},"injectables/OpfsService.html":{},"classes/Recording.html":{},"injectables/RecordingService.html":{},"pipes/SafeUrlPipe.html":{},"injectables/ThumbnailService.html":{},"components/VideoPlayerComponent.html":{}}}],["origin",{"_index":694,"title":{},"body":{"index.html":{}}}],["out",{"_index":522,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["output",{"_index":580,"title":{},"body":{"components/TopBarComponent.html":{}}}],["outputs",{"_index":577,"title":{},"body":{"components/TopBarComponent.html":{}}}],["overview",{"_index":740,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":653,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":89,"title":{},"body":{"components/HomePageComponent.html":{},"index.html":{}}}],["page'},{'name",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["page.component.html",{"_index":101,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.scss",{"_index":102,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts",{"_index":88,"title":{},"body":{"components/HomePageComponent.html":{},"coverage.html":{}}}],["page.component.ts:112",{"_index":120,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:35",{"_index":168,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:43",{"_index":114,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:45",{"_index":167,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:46",{"_index":137,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:47",{"_index":135,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:56",{"_index":158,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:65",{"_index":147,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:76",{"_index":129,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:86",{"_index":131,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:97",{"_index":123,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page/home",{"_index":87,"title":{},"body":{"components/HomePageComponent.html":{},"coverage.html":{}}}],["param",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"injectables/OpfsService.html":{},"injectables/RecordingService.html":{},"pipes/SafeUrlPipe.html":{},"injectables/ThumbnailService.html":{},"components/VideoPlayerComponent.html":{}}}],["parameters",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/OpfsService.html":{},"injectables/RecordingService.html":{},"pipes/SafeUrlPipe.html":{},"injectables/ThumbnailService.html":{},"components/VideoPlayerComponent.html":{}}}],["pass",{"_index":197,"title":{},"body":{"components/HomePageComponent.html":{}}}],["passed",{"_index":127,"title":{},"body":{"components/HomePageComponent.html":{},"components/TopBarComponent.html":{}}}],["passes",{"_index":117,"title":{},"body":{"components/HomePageComponent.html":{},"classes/OngoingRecording.html":{}}}],["past",{"_index":435,"title":{},"body":{"injectables/RecordingService.html":{},"index.html":{}}}],["path",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"injectables/OpfsService.html":{}}}],["performed",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["performs",{"_index":161,"title":{},"body":{"components/HomePageComponent.html":{}}}],["persist",{"_index":266,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{}}}],["persisted",{"_index":729,"title":{},"body":{"index.html":{}}}],["pipe",{"_index":368,"title":{"pipes/SafeUrlPipe.html":{}},"body":{"injectables/OpfsService.html":{},"injectables/RecordingService.html":{},"pipes/SafeUrlPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipe(take(1)).subscribe(([filepath",{"_index":475,"title":{},"body":{"injectables/RecordingService.html":{}}}],["pipes",{"_index":480,"title":{},"body":{"pipes/SafeUrlPipe.html":{}}}],["pipes/safeurl.pipe",{"_index":193,"title":{},"body":{"components/HomePageComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["pipetransform",{"_index":494,"title":{},"body":{"pipes/SafeUrlPipe.html":{}}}],["placeholder",{"_index":625,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["play",{"_index":128,"title":{},"body":{"components/HomePageComponent.html":{}}}],["player",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["player.component",{"_index":196,"title":{},"body":{"components/HomePageComponent.html":{}}}],["player.component.html",{"_index":601,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["player.component.scss",{"_index":602,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["player.component.ts",{"_index":600,"title":{},"body":{"components/VideoPlayerComponent.html":{},"coverage.html":{}}}],["player.component.ts:27",{"_index":614,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["player.component.ts:34",{"_index":612,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["player.component.ts:41",{"_index":616,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["player.component.ts:48",{"_index":624,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["player.component.ts:53",{"_index":607,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["player.component.ts:62",{"_index":617,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["player.component.ts:66",{"_index":610,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["player/video",{"_index":195,"title":{},"body":{"components/HomePageComponent.html":{},"components/VideoPlayerComponent.html":{},"coverage.html":{}}}],["playrecording",{"_index":108,"title":{},"body":{"components/HomePageComponent.html":{}}}],["playrecording(recording",{"_index":122,"title":{},"body":{"components/HomePageComponent.html":{}}}],["populates",{"_index":608,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["present",{"_index":269,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{}}}],["press",{"_index":733,"title":{},"body":{"index.html":{}}}],["pressing",{"_index":711,"title":{},"body":{"index.html":{}}}],["previewed",{"_index":730,"title":{},"body":{"index.html":{}}}],["primeflex",{"_index":661,"title":{},"body":{"dependencies.html":{}}}],["primeicons",{"_index":663,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":665,"title":{},"body":{"dependencies.html":{}}}],["primeng/card",{"_index":189,"title":{},"body":{"components/HomePageComponent.html":{}}}],["primeng/dynamicdialog",{"_index":191,"title":{},"body":{"components/HomePageComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["primeng/inputtext",{"_index":589,"title":{},"body":{"components/TopBarComponent.html":{}}}],["primeng/menubar",{"_index":588,"title":{},"body":{"components/TopBarComponent.html":{}}}],["primeng/prime",{"_index":690,"title":{},"body":{"index.html":{}}}],["primeng/speeddial",{"_index":188,"title":{},"body":{"components/HomePageComponent.html":{}}}],["privacy",{"_index":681,"title":{},"body":{"index.html":{}}}],["private",{"_index":246,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"injectables/RecordingService.html":{},"components/VideoPlayerComponent.html":{},"index.html":{}}}],["process",{"_index":388,"title":{},"body":{"injectables/RecordingService.html":{}}}],["promps",{"_index":420,"title":{},"body":{"injectables/RecordingService.html":{}}}],["properties",{"_index":26,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"injectables/LocalStorageService.html":{},"classes/OngoingRecording.html":{},"classes/Recording.html":{},"injectables/RecordingService.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{},"properties.html":{}}}],["provideanimations",{"_index":755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":512,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["providedin",{"_index":242,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"injectables/OpfsService.html":{},"injectables/RecordingService.html":{},"injectables/ThumbnailService.html":{}}}],["providerouter(routes",{"_index":753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":95,"title":{},"body":{"components/HomePageComponent.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":574,"title":{},"body":{"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["quick",{"_index":692,"title":{},"body":{"index.html":{}}}],["r.title?.includes(searchterm",{"_index":157,"title":{},"body":{"components/HomePageComponent.html":{}}}],["r.uuid",{"_index":449,"title":{},"body":{"injectables/RecordingService.html":{}}}],["reactive",{"_index":678,"title":{},"body":{"index.html":{}}}],["reactiveformsmodule",{"_index":570,"title":{},"body":{"components/TopBarComponent.html":{}}}],["reading",{"_index":735,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":390,"title":{},"body":{"injectables/RecordingService.html":{}}}],["rec",{"_index":140,"title":{},"body":{"components/HomePageComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["rec!.stopped",{"_index":142,"title":{},"body":{"components/HomePageComponent.html":{}}}],["rec?.fileurl",{"_index":620,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["receives",{"_index":401,"title":{},"body":{"injectables/RecordingService.html":{}}}],["record",{"_index":310,"title":{},"body":{"classes/OngoingRecording.html":{},"classes/Recording.html":{},"index.html":{}}}],["recorded",{"_index":697,"title":{},"body":{"index.html":{}}}],["recording",{"_index":53,"title":{"classes/Recording.html":{}},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"classes/OngoingRecording.html":{},"classes/Recording.html":{},"injectables/RecordingService.html":{},"injectables/ThumbnailService.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{},"coverage.html":{},"index.html":{}}}],["recording.base64thumbnail",{"_index":478,"title":{},"body":{"injectables/RecordingService.html":{}}}],["recording.class",{"_index":187,"title":{},"body":{"components/HomePageComponent.html":{},"injectables/RecordingService.html":{}}}],["recording.class.ts",{"_index":290,"title":{},"body":{"classes/OngoingRecording.html":{},"coverage.html":{}}}],["recording.class.ts:16",{"_index":302,"title":{},"body":{"classes/OngoingRecording.html":{}}}],["recording.class.ts:22",{"_index":299,"title":{},"body":{"classes/OngoingRecording.html":{}}}],["recording.class.ts:28",{"_index":295,"title":{},"body":{"classes/OngoingRecording.html":{}}}],["recording.class.ts:35",{"_index":304,"title":{},"body":{"classes/OngoingRecording.html":{}}}],["recording.fileurl",{"_index":477,"title":{},"body":{"injectables/RecordingService.html":{}}}],["recording.title",{"_index":210,"title":{},"body":{"components/HomePageComponent.html":{},"injectables/RecordingService.html":{}}}],["recordings",{"_index":92,"title":{},"body":{"components/HomePageComponent.html":{},"injectables/RecordingService.html":{},"index.html":{}}}],["recordings.filter(r",{"_index":156,"title":{},"body":{"components/HomePageComponent.html":{}}}],["recordingservice",{"_index":105,"title":{"injectables/RecordingService.html":{}},"body":{"components/HomePageComponent.html":{},"injectables/RecordingService.html":{},"coverage.html":{}}}],["recordingtoadd",{"_index":406,"title":{},"body":{"injectables/RecordingService.html":{}}}],["recordingtoadd.created",{"_index":445,"title":{},"body":{"injectables/RecordingService.html":{}}}],["recordingtoadd.uuid",{"_index":443,"title":{},"body":{"injectables/RecordingService.html":{}}}],["recordinguuidtoremove",{"_index":429,"title":{},"body":{"injectables/RecordingService.html":{}}}],["recoring",{"_index":710,"title":{},"body":{"index.html":{}}}],["red",{"_index":726,"title":{},"body":{"index.html":{}}}],["ref",{"_index":603,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["removed",{"_index":430,"title":{},"body":{"injectables/RecordingService.html":{}}}],["removeitem",{"_index":282,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["removeitem(key",{"_index":277,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{}}}],["removerecording",{"_index":395,"title":{},"body":{"injectables/RecordingService.html":{}}}],["removerecording(recordinguuidtoremove",{"_index":427,"title":{},"body":{"injectables/RecordingService.html":{}}}],["removes",{"_index":275,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{}}}],["reponsible",{"_index":233,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{}}}],["representing",{"_index":291,"title":{},"body":{"classes/OngoingRecording.html":{},"classes/Recording.html":{}}}],["request",{"_index":717,"title":{},"body":{"index.html":{}}}],["requested",{"_index":245,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"injectables/OpfsService.html":{}}}],["requests",{"_index":685,"title":{},"body":{"index.html":{}}}],["res",{"_index":215,"title":{},"body":{"components/HomePageComponent.html":{}}}],["responsible",{"_index":300,"title":{},"body":{"classes/OngoingRecording.html":{},"injectables/RecordingService.html":{},"injectables/ThumbnailService.html":{}}}],["resposible",{"_index":316,"title":{},"body":{"injectables/OpfsService.html":{}}}],["results",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"classes/OngoingRecording.html":{},"injectables/OpfsService.html":{},"classes/Recording.html":{},"injectables/RecordingService.html":{},"pipes/SafeUrlPipe.html":{},"injectables/ThumbnailService.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":263,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"injectables/OpfsService.html":{},"injectables/RecordingService.html":{},"pipes/SafeUrlPipe.html":{},"injectables/ThumbnailService.html":{}}}],["returned",{"_index":257,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{}}}],["returns",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"classes/OngoingRecording.html":{},"injectables/OpfsService.html":{},"injectables/RecordingService.html":{},"pipes/SafeUrlPipe.html":{},"injectables/ThumbnailService.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["right",{"_index":714,"title":{},"body":{"index.html":{}}}],["root",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"injectables/OpfsService.html":{},"injectables/RecordingService.html":{},"injectables/ThumbnailService.html":{}}}],["root'},{'name",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["router",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["routeroutlet",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["rxjs",{"_index":185,"title":{},"body":{"components/HomePageComponent.html":{},"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"classes/OngoingRecording.html":{},"injectables/OpfsService.html":{},"injectables/RecordingService.html":{},"injectables/ThumbnailService.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{},"dependencies.html":{},"index.html":{}}}],["safe",{"_index":482,"title":{},"body":{"pipes/SafeUrlPipe.html":{}}}],["safeurl",{"_index":487,"title":{},"body":{"pipes/SafeUrlPipe.html":{}}}],["safeurlpipe",{"_index":100,"title":{"pipes/SafeUrlPipe.html":{}},"body":{"components/HomePageComponent.html":{},"pipes/SafeUrlPipe.html":{},"components/VideoPlayerComponent.html":{},"coverage.html":{}}}],["sanitized",{"_index":499,"title":{},"body":{"pipes/SafeUrlPipe.html":{}}}],["save/export",{"_index":328,"title":{},"body":{"injectables/OpfsService.html":{}}}],["saved",{"_index":411,"title":{},"body":{"injectables/RecordingService.html":{}}}],["savefile",{"_index":362,"title":{},"body":{"injectables/OpfsService.html":{}}}],["savefile.write(exportfile",{"_index":363,"title":{},"body":{"injectables/OpfsService.html":{}}}],["savefileopfs",{"_index":321,"title":{},"body":{"injectables/OpfsService.html":{}}}],["savefileopfs$(blob",{"_index":339,"title":{},"body":{"injectables/OpfsService.html":{}}}],["saves",{"_index":239,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"injectables/RecordingService.html":{}}}],["saving",{"_index":418,"title":{},"body":{"injectables/RecordingService.html":{}}}],["screen",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/TopBarComponent.html":{},"index.html":{}}}],["screenshare",{"_index":724,"title":{},"body":{"index.html":{}}}],["search",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"components/TopBarComponent.html":{}}}],["searchfield",{"_index":586,"title":{},"body":{"components/TopBarComponent.html":{}}}],["searchinput",{"_index":575,"title":{},"body":{"components/TopBarComponent.html":{}}}],["searchterm",{"_index":106,"title":{},"body":{"components/HomePageComponent.html":{},"components/TopBarComponent.html":{}}}],["searchterm(searchterm",{"_index":199,"title":{},"body":{"components/HomePageComponent.html":{}}}],["seeking",{"_index":540,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["seems",{"_index":537,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["serializable",{"_index":230,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"miscellaneous/typealiases.html":{}}}],["service",{"_index":315,"title":{},"body":{"injectables/OpfsService.html":{},"injectables/RecordingService.html":{},"injectables/ThumbnailService.html":{}}}],["services/opfs/opfs.service",{"_index":626,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["services/recording/recording.service",{"_index":175,"title":{},"body":{"components/HomePageComponent.html":{}}}],["set",{"_index":198,"title":{},"body":{"components/HomePageComponent.html":{},"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"injectables/ThumbnailService.html":{}}}],["setitem",{"_index":283,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setitem(key",{"_index":258,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{}}}],["sets",{"_index":251,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{}}}],["setsearchterm(searchterm",{"_index":173,"title":{},"body":{"components/HomePageComponent.html":{}}}],["setter",{"_index":115,"title":{},"body":{"components/HomePageComponent.html":{}}}],["sharereplay",{"_index":179,"title":{},"body":{"components/HomePageComponent.html":{}}}],["sharereplay(1",{"_index":146,"title":{},"body":{"components/HomePageComponent.html":{}}}],["sharing",{"_index":686,"title":{},"body":{"index.html":{}}}],["simple",{"_index":222,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{}}}],["single",{"_index":675,"title":{},"body":{"index.html":{}}}],["skipping",{"_index":517,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["skipwhile",{"_index":180,"title":{},"body":{"components/HomePageComponent.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["skipwhile(rec",{"_index":619,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["skipwhile(str",{"_index":595,"title":{},"body":{"components/TopBarComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"classes/OngoingRecording.html":{},"injectables/OpfsService.html":{},"classes/Recording.html":{},"injectables/RecordingService.html":{},"pipes/SafeUrlPipe.html":{},"injectables/ThumbnailService.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["specific",{"_index":721,"title":{},"body":{"index.html":{}}}],["specified",{"_index":334,"title":{},"body":{"injectables/OpfsService.html":{},"injectables/RecordingService.html":{}}}],["specify",{"_index":326,"title":{},"body":{"injectables/OpfsService.html":{}}}],["speeddialmodule",{"_index":97,"title":{},"body":{"components/HomePageComponent.html":{}}}],["src/.../app.config.ts",{"_index":751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../local",{"_index":749,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:25",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:34",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":638,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/pages/home",{"_index":86,"title":{},"body":{"components/HomePageComponent.html":{},"coverage.html":{}}}],["src/app/components/top",{"_index":562,"title":{},"body":{"components/TopBarComponent.html":{},"coverage.html":{}}}],["src/app/components/video",{"_index":599,"title":{},"body":{"components/VideoPlayerComponent.html":{},"coverage.html":{}}}],["src/app/models/ongoing",{"_index":289,"title":{},"body":{"classes/OngoingRecording.html":{},"coverage.html":{}}}],["src/app/models/recording.class.ts",{"_index":373,"title":{},"body":{"classes/Recording.html":{},"coverage.html":{}}}],["src/app/models/recording.class.ts:14",{"_index":386,"title":{},"body":{"classes/Recording.html":{}}}],["src/app/models/recording.class.ts:20",{"_index":385,"title":{},"body":{"classes/Recording.html":{}}}],["src/app/models/recording.class.ts:26",{"_index":383,"title":{},"body":{"classes/Recording.html":{}}}],["src/app/models/recording.class.ts:32",{"_index":382,"title":{},"body":{"classes/Recording.html":{}}}],["src/app/models/recording.class.ts:38",{"_index":377,"title":{},"body":{"classes/Recording.html":{}}}],["src/app/pipes/safeurl.pipe.ts",{"_index":481,"title":{},"body":{"pipes/SafeUrlPipe.html":{},"coverage.html":{}}}],["src/app/pipes/safeurl.pipe.ts:30",{"_index":490,"title":{},"body":{"pipes/SafeUrlPipe.html":{}}}],["src/app/services/local",{"_index":219,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/services/opfs/opfs.service.ts",{"_index":313,"title":{},"body":{"injectables/OpfsService.html":{},"coverage.html":{}}}],["src/app/services/opfs/opfs.service.ts:14",{"_index":322,"title":{},"body":{"injectables/OpfsService.html":{}}}],["src/app/services/opfs/opfs.service.ts:30",{"_index":337,"title":{},"body":{"injectables/OpfsService.html":{}}}],["src/app/services/opfs/opfs.service.ts:44",{"_index":333,"title":{},"body":{"injectables/OpfsService.html":{}}}],["src/app/services/opfs/opfs.service.ts:58",{"_index":324,"title":{},"body":{"injectables/OpfsService.html":{}}}],["src/app/services/opfs/opfs.service.ts:77",{"_index":342,"title":{},"body":{"injectables/OpfsService.html":{}}}],["src/app/services/recording/recording.service.ts",{"_index":387,"title":{},"body":{"injectables/RecordingService.html":{},"coverage.html":{}}}],["src/app/services/recording/recording.service.ts:107",{"_index":409,"title":{},"body":{"injectables/RecordingService.html":{}}}],["src/app/services/recording/recording.service.ts:119",{"_index":415,"title":{},"body":{"injectables/RecordingService.html":{}}}],["src/app/services/recording/recording.service.ts:29",{"_index":433,"title":{},"body":{"injectables/RecordingService.html":{}}}],["src/app/services/recording/recording.service.ts:36",{"_index":398,"title":{},"body":{"injectables/RecordingService.html":{}}}],["src/app/services/recording/recording.service.ts:59",{"_index":400,"title":{},"body":{"injectables/RecordingService.html":{}}}],["src/app/services/recording/recording.service.ts:70",{"_index":428,"title":{},"body":{"injectables/RecordingService.html":{}}}],["src/app/services/recording/recording.service.ts:79",{"_index":431,"title":{},"body":{"injectables/RecordingService.html":{}}}],["src/app/services/thumbnail/thumbnail.service.ts",{"_index":502,"title":{},"body":{"injectables/ThumbnailService.html":{},"coverage.html":{}}}],["src/app/services/thumbnail/thumbnail.service.ts:14",{"_index":506,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["src/app/services/thumbnail/thumbnail.service.ts:32",{"_index":508,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["standalone",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"pipes/SafeUrlPipe.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["started",{"_index":673,"title":{"index.html":{}},"body":{}}],["startrecording",{"_index":109,"title":{},"body":{"components/HomePageComponent.html":{},"injectables/RecordingService.html":{}}}],["starts",{"_index":130,"title":{},"body":{"components/HomePageComponent.html":{},"injectables/RecordingService.html":{},"index.html":{}}}],["startwith",{"_index":181,"title":{},"body":{"components/HomePageComponent.html":{}}}],["startwith(false",{"_index":145,"title":{},"body":{"components/HomePageComponent.html":{}}}],["statements",{"_index":635,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":389,"title":{},"body":{"injectables/RecordingService.html":{}}}],["stop",{"_index":307,"title":{},"body":{"classes/OngoingRecording.html":{}}}],["stopped",{"_index":294,"title":{},"body":{"classes/OngoingRecording.html":{},"index.html":{}}}],["stopping",{"_index":723,"title":{},"body":{"index.html":{}}}],["stoprecording",{"_index":110,"title":{},"body":{"components/HomePageComponent.html":{},"classes/OngoingRecording.html":{}}}],["stops",{"_index":132,"title":{},"body":{"components/HomePageComponent.html":{},"classes/OngoingRecording.html":{}}}],["storage",{"_index":237,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"injectables/RecordingService.html":{},"index.html":{}}}],["storage.service",{"_index":440,"title":{},"body":{"injectables/RecordingService.html":{}}}],["storage.service.ts",{"_index":221,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["storage.service.ts:10",{"_index":227,"title":{},"body":{"interfaces/ICache.html":{}}}],["storage.service.ts:34",{"_index":284,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:55",{"_index":287,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:75",{"_index":285,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:87",{"_index":286,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage/local",{"_index":220,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"injectables/RecordingService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["store",{"_index":434,"title":{},"body":{"injectables/RecordingService.html":{}}}],["storing/saving/exporting",{"_index":696,"title":{},"body":{"index.html":{}}}],["str",{"_index":596,"title":{},"body":{"components/TopBarComponent.html":{}}}],["str?.length",{"_index":597,"title":{},"body":{"components/TopBarComponent.html":{}}}],["string",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"injectables/OpfsService.html":{},"classes/Recording.html":{},"injectables/RecordingService.html":{},"pipes/SafeUrlPipe.html":{},"injectables/ThumbnailService.html":{}}}],["styleurl",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["subject",{"_index":345,"title":{},"body":{"injectables/OpfsService.html":{}}}],["subscribe(res",{"_index":205,"title":{},"body":{"components/HomePageComponent.html":{}}}],["subscribed",{"_index":432,"title":{},"body":{"injectables/RecordingService.html":{}}}],["support",{"_index":539,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["supports",{"_index":680,"title":{},"body":{"index.html":{}}}],["switchmap",{"_index":182,"title":{},"body":{"components/HomePageComponent.html":{},"injectables/OpfsService.html":{},"injectables/ThumbnailService.html":{},"components/VideoPlayerComponent.html":{}}}],["switchmap(([exportfile",{"_index":364,"title":{},"body":{"injectables/OpfsService.html":{}}}],["switchmap(filehandler",{"_index":350,"title":{},"body":{"injectables/OpfsService.html":{}}}],["switchmap(filepicker",{"_index":357,"title":{},"body":{"injectables/OpfsService.html":{}}}],["switchmap(rec",{"_index":141,"title":{},"body":{"components/HomePageComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["switchmap(root",{"_index":347,"title":{},"body":{"injectables/OpfsService.html":{}}}],["system",{"_index":327,"title":{},"body":{"injectables/OpfsService.html":{},"index.html":{}}}],["t",{"_index":255,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{}}}],["t.stop",{"_index":467,"title":{},"body":{"injectables/RecordingService.html":{}}}],["table",{"_index":652,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":651,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":514,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["take",{"_index":183,"title":{},"body":{"components/HomePageComponent.html":{},"injectables/OpfsService.html":{},"injectables/RecordingService.html":{},"injectables/ThumbnailService.html":{}}}],["take(1",{"_index":202,"title":{},"body":{"components/HomePageComponent.html":{},"injectables/OpfsService.html":{},"injectables/ThumbnailService.html":{}}}],["takeuntildestroyed",{"_index":590,"title":{},"body":{"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["tap",{"_index":184,"title":{},"body":{"components/HomePageComponent.html":{},"injectables/OpfsService.html":{}}}],["tap(([exportfile",{"_index":361,"title":{},"body":{"injectables/OpfsService.html":{}}}],["tap(([filehandler",{"_index":369,"title":{},"body":{"injectables/OpfsService.html":{}}}],["tap(rec",{"_index":203,"title":{},"body":{"components/HomePageComponent.html":{}}}],["technologies",{"_index":687,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["templateurl",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["term",{"_index":163,"title":{},"body":{"components/HomePageComponent.html":{},"components/TopBarComponent.html":{}}}],["this.addrecording(recording",{"_index":479,"title":{},"body":{"injectables/RecordingService.html":{}}}],["this.cache",{"_index":250,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{}}}],["this.cache[key",{"_index":261,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{}}}],["this.cache[key].next(undefined",{"_index":279,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{}}}],["this.cache[key].next(value",{"_index":262,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{}}}],["this.currentrecording$.next(rec",{"_index":204,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.currentrecording$.pipe",{"_index":138,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.currentrecording$.value",{"_index":206,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.currentrecording$.value.stoprecording",{"_index":207,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.dialogservice.getinstance(ref",{"_index":629,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["this.dialogservice.open(videoplayercomponent",{"_index":208,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.instance",{"_index":628,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["this.instance?.data",{"_index":630,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["this.localstorage.getitem(recordingservice.local_storage_key",{"_index":437,"title":{},"body":{"injectables/RecordingService.html":{}}}],["this.localstorage.setitem(recordingservice.local_storage_key",{"_index":446,"title":{},"body":{"injectables/RecordingService.html":{}}}],["this.mediarecorder?.stop",{"_index":311,"title":{},"body":{"classes/OngoingRecording.html":{}}}],["this.ngzone.run",{"_index":463,"title":{},"body":{"injectables/RecordingService.html":{}}}],["this.onrecordingcomplete(currentrecording",{"_index":464,"title":{},"body":{"injectables/RecordingService.html":{}}}],["this.opfsservice.exportfile$(recording.fileurl",{"_index":470,"title":{},"body":{"injectables/RecordingService.html":{}}}],["this.opfsservice.getfile$(rec?.fileurl",{"_index":621,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["this.recording$.next(this.instance.data['recording",{"_index":631,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["this.recording$.pipe",{"_index":618,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["this.recordings$.value",{"_index":447,"title":{},"body":{"injectables/RecordingService.html":{}}}],["this.recordings$.value.filter(r",{"_index":448,"title":{},"body":{"injectables/RecordingService.html":{}}}],["this.recordingservice.exportrecoding$(recording",{"_index":214,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.recordingservice.startrecording$().pipe",{"_index":201,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.router.navigate(['/home",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sanitized.bypasssecuritytrusturl(value",{"_index":501,"title":{},"body":{"pipes/SafeUrlPipe.html":{}}}],["this.searchinput.valuechanges.pipe",{"_index":594,"title":{},"body":{"components/TopBarComponent.html":{}}}],["this.searchterm$.next(searchterm",{"_index":200,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.searchterm$]).pipe",{"_index":154,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.searchterm.emit(searchterm",{"_index":598,"title":{},"body":{"components/TopBarComponent.html":{}}}],["this.thumbnailservice.generatethumbnail$(blob",{"_index":474,"title":{},"body":{"injectables/RecordingService.html":{}}}],["thumbnail",{"_index":380,"title":{},"body":{"classes/Recording.html":{},"injectables/ThumbnailService.html":{}}}],["thumbnail/thumbnail.service",{"_index":441,"title":{},"body":{"injectables/RecordingService.html":{}}}],["thumbnailservice",{"_index":397,"title":{"injectables/ThumbnailService.html":{}},"body":{"injectables/RecordingService.html":{},"injectables/ThumbnailService.html":{},"coverage.html":{}}}],["time",{"_index":534,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["timeupdate')]).pipe",{"_index":551,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["title",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"classes/Recording.html":{},"injectables/RecordingService.html":{}}}],["titles",{"_index":165,"title":{},"body":{"components/HomePageComponent.html":{}}}],["top",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["topbarcomponent",{"_index":20,"title":{"components/TopBarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{},"coverage.html":{}}}],["transform",{"_index":488,"title":{},"body":{"pipes/SafeUrlPipe.html":{}}}],["transform(value",{"_index":489,"title":{},"body":{"pipes/SafeUrlPipe.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["triggers",{"_index":423,"title":{},"body":{"injectables/RecordingService.html":{}}}],["true",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"injectables/OpfsService.html":{},"injectables/RecordingService.html":{},"pipes/SafeUrlPipe.html":{},"injectables/ThumbnailService.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["trust",{"_index":492,"title":{},"body":{"pipes/SafeUrlPipe.html":{}}}],["tslib",{"_index":668,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"classes/OngoingRecording.html":{},"injectables/OpfsService.html":{},"classes/Recording.html":{},"injectables/RecordingService.html":{},"pipes/SafeUrlPipe.html":{},"injectables/ThumbnailService.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":747,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedef",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"classes/OngoingRecording.html":{},"injectables/OpfsService.html":{},"injectables/RecordingService.html":{},"pipes/SafeUrlPipe.html":{},"injectables/ThumbnailService.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["types/uuid",{"_index":659,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":688,"title":{},"body":{"index.html":{}}}],["ui",{"_index":566,"title":{},"body":{"components/TopBarComponent.html":{}}}],["ulr",{"_index":485,"title":{},"body":{"pipes/SafeUrlPipe.html":{}}}],["undefined",{"_index":268,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"components/VideoPlayerComponent.html":{}}}],["updates",{"_index":253,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{}}}],["url",{"_index":384,"title":{},"body":{"classes/Recording.html":{},"pipes/SafeUrlPipe.html":{}}}],["url.createobjecturl(blob",{"_index":529,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["url.createobjecturl(file",{"_index":623,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["use",{"_index":486,"title":{},"body":{"pipes/SafeUrlPipe.html":{}}}],["used",{"_index":170,"title":{},"body":{"components/HomePageComponent.html":{},"index.html":{}}}],["user",{"_index":93,"title":{},"body":{"components/HomePageComponent.html":{},"injectables/OpfsService.html":{},"injectables/RecordingService.html":{},"index.html":{}}}],["using",{"_index":731,"title":{},"body":{"index.html":{}}}],["util",{"_index":416,"title":{},"body":{"injectables/RecordingService.html":{}}}],["uuid",{"_index":376,"title":{},"body":{"classes/Recording.html":{},"injectables/RecordingService.html":{},"dependencies.html":{}}}],["uuid.v4",{"_index":444,"title":{},"body":{"injectables/RecordingService.html":{}}}],["value",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"classes/OngoingRecording.html":{},"injectables/RecordingService.html":{},"pipes/SafeUrlPipe.html":{},"injectables/ThumbnailService.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["variable",{"_index":639,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":750,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":744,"title":{},"body":{"properties.html":{}}}],["video",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"injectables/RecordingService.html":{},"injectables/ThumbnailService.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{},"index.html":{}}}],["video.currenttime",{"_index":544,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["video.muted",{"_index":527,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["video.pause",{"_index":560,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["video.src",{"_index":528,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["video/webm",{"_index":455,"title":{},"body":{"injectables/RecordingService.html":{}}}],["videoblob",{"_index":516,"title":{},"body":{"injectables/ThumbnailService.html":{}}}],["videofile",{"_index":412,"title":{},"body":{"injectables/RecordingService.html":{}}}],["videofiles",{"_index":698,"title":{},"body":{"index.html":{}}}],["videoplayer",{"_index":126,"title":{},"body":{"components/HomePageComponent.html":{}}}],["videoplayercomponent",{"_index":79,"title":{"components/VideoPlayerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{},"coverage.html":{}}}],["videourl",{"_index":604,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["void",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{},"injectables/LocalStorageService.html":{},"classes/OngoingRecording.html":{},"injectables/RecordingService.html":{},"components/TopBarComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["way",{"_index":679,"title":{},"body":{"index.html":{}}}],["web",{"_index":236,"title":{},"body":{"interfaces/ICache.html":{},"injectables/LocalStorageService.html":{},"components/TopBarComponent.html":{},"index.html":{}}}],["web.dev",{"_index":738,"title":{},"body":{"index.html":{}}}],["webm",{"_index":296,"title":{},"body":{"classes/OngoingRecording.html":{},"injectables/RecordingService.html":{},"injectables/ThumbnailService.html":{},"index.html":{}}}],["wherever",{"_index":719,"title":{},"body":{"index.html":{}}}],["whole",{"_index":720,"title":{},"body":{"index.html":{}}}],["width",{"_index":211,"title":{},"body":{"components/HomePageComponent.html":{}}}],["window.prompt(\"recording",{"_index":471,"title":{},"body":{"injectables/RecordingService.html":{}}}],["withcomponentinputbinding",{"_index":754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["workflow",{"_index":709,"title":{},"body":{"index.html":{}}}],["working",{"_index":309,"title":{},"body":{"classes/OngoingRecording.html":{}}}],["works",{"_index":683,"title":{},"body":{"index.html":{}}}],["write",{"_index":344,"title":{},"body":{"injectables/OpfsService.html":{}}}],["writes",{"_index":343,"title":{},"body":{"injectables/OpfsService.html":{}}}],["written",{"_index":677,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":671,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        The main App Component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                                TopBarComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                router\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSearchTerm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSearchTerm\n                        \n                    \n                \n            \n            \n                \nonSearchTerm(search: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:34\n                        \n                    \n\n\n            \n                \n                        Function that navigates to the search router path\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                search\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nsearch to be performed\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'angular-screen-recording'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:25\n                        \n                    \n\n            \n                \n                    Title of the app\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { Router, RouterOutlet } from '@angular/router';\nimport { TopBarComponent } from \"./components/top-bar/top-bar.component\";\n\n/**\n * The main App Component\n *\n * @export\n * @class AppComponent\n * @typedef {AppComponent}\n */\n@Component({\n    selector: 'app-root',\n    standalone: true,\n    templateUrl: './app.component.html',\n    styleUrl: './app.component.scss',\n    imports: [RouterOutlet, TopBarComponent]\n})\nexport class AppComponent {\n  /**\n   * Title of the app\n   *\n   * @type {string}\n   */\n  title = 'angular-screen-recording';\n\n  router = inject(Router)\n\n  /**\n   * Function that navigates to the search router path\n   *\n   * @param {string} search - search to be performed\n   */\n  onSearchTerm(search: string) {\n    this.router.navigate(['/home', search])\n  }\n}\n    \n\n    \n        \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'VideoPlayerComponent', 'selector': 'app-video-player'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePageComponent.html":{"url":"components/HomePageComponent.html","title":"component - HomePageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomePageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/pages/home-page/home-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        Home Page of the app. Contains a list of all recordings the user has created in the app\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            DialogService\n                \n            \n\n\n            \n                selector\n                app-home-page\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            SpeedDialModule\n                            CommonModule\n                            CardModule\n                            SafeUrlPipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentRecording$\n                            \n                            \n                                dialogService\n                            \n                            \n                                ongoingRecording$\n                            \n                            \n                                recordings$\n                            \n                            \n                                recordingService\n                            \n                            \n                                searchTerm$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                exportRecording\n                            \n                            \n                                playRecording\n                            \n                            \n                                startRecording\n                            \n                            \n                                stopRecording\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                searchTerm\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    searchTerm\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        searchTerm\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/pages/home-page/home-page.component.ts:43\n                            \n                        \n                \n                    \n                        setter input that passes the input to the searchTerm$ BehaviorSubject\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        exportRecording\n                        \n                    \n                \n            \n            \n                \nexportRecording(recording: Recording)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/home-page/home-page.component.ts:112\n                        \n                    \n\n\n            \n                \n                        Function that initiates a recording export\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                recording\n                                            \n                                                            Recording\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nrecording to export\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playRecording\n                        \n                    \n                \n            \n            \n                \nplayRecording(recording: Recording)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/home-page/home-page.component.ts:97\n                        \n                    \n\n\n            \n                \n                        Function that opens a dialog with a videoplayer with the passed recording\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                recording\n                                            \n                                                            Recording\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nrecording to play\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startRecording\n                        \n                    \n                \n            \n            \n                \nstartRecording()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/home-page/home-page.component.ts:76\n                        \n                    \n\n\n            \n                \n                        Function that starts a recording\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stopRecording\n                        \n                    \n                \n            \n            \n                \nstopRecording()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/home-page/home-page.component.ts:86\n                        \n                    \n\n\n            \n                \n                        Function that stops a recording\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentRecording$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/home-page/home-page.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/home-page/home-page.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ongoingRecording$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.currentRecording$.pipe(\n    filter(rec => rec !== null),\n    switchMap(rec => rec!.stopped$),\n    map(bool => !bool),\n    startWith(false),\n    shareReplay(1)\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/home-page/home-page.component.ts:65\n                        \n                    \n\n            \n                \n                    Observable emmiting a boolean indicating an ongoing recording\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recordings$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : combineLatest([this.recordingService.recordings$, this.searchTerm$]).pipe(\n    map(([recordings, searchTerm]) => !!searchTerm ? recordings.filter(r => r.title?.includes(searchTerm)) : recordings)\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/home-page/home-page.component.ts:56\n                        \n                    \n\n            \n                \n                    Observable emitting all the recordings the user has made in the app.\n Also performs filtering by a search term applied to the titles of the recordings\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recordingService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(RecordingService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/home-page/home-page.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchTerm$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/home-page/home-page.component.ts:35\n                        \n                    \n\n            \n                \n                    BehaviorSubject containing the search term to be used in filtering. If null or blank, no filtering should be done.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        searchTerm\n                    \n                \n\n\n                \n                    \n                        setsearchTerm(searchTerm: string | null)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/pages/home-page/home-page.component.ts:43\n                                \n                            \n                    \n                        \n                                setter input that passes the input to the searchTerm$ BehaviorSubject\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            searchTerm\n                                                    \n                                                            \n                                                                        string | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { ChangeDetectorRef, Component, Input, inject } from '@angular/core';\nimport { RecordingService } from '../../../services/recording/recording.service';\nimport { BehaviorSubject, Observable, combineLatest, filter, map, shareReplay, skipWhile, startWith, switchMap, take, tap } from 'rxjs';\nimport { OngoingRecording } from '../../../models/ongoing-recording.class';\nimport { SpeedDialModule } from 'primeng/speeddial';\nimport { CardModule } from 'primeng/card';\nimport { DialogService, DynamicDialogModule } from 'primeng/dynamicdialog';\nimport { CommonModule } from '@angular/common';\nimport { SafeUrlPipe } from '../../../pipes/safeUrl.pipe';\nimport { Recording } from '../../../models/recording.class';\nimport { VideoPlayerComponent } from '../../video-player/video-player.component';\n\n/**\n * Home Page of the app. Contains a list of all recordings the user has created in the app\n *\n * @export\n * @class HomePageComponent\n * @typedef {HomePageComponent}\n */\n@Component({\n  selector: 'app-home-page',\n  standalone: true,\n  imports: [SpeedDialModule, CommonModule, CardModule, SafeUrlPipe],\n  providers: [DialogService],\n  templateUrl: './home-page.component.html',\n  styleUrl: './home-page.component.scss'\n})\nexport class HomePageComponent {\n\n  /**\n   * BehaviorSubject containing the search term to be used in filtering. If null or blank, no filtering should be done.\n   *\n   * @type {*}\n   */\n  searchTerm$ = new BehaviorSubject(null);\n\n  /**\n   * setter input that passes the input to the searchTerm$ BehaviorSubject\n   *\n   * @type {string} - searchTerm to pass to the searchTerm$ BehaviorSubject\n   */\n  @Input()\n  set searchTerm(searchTerm: string | null) {this.searchTerm$.next(searchTerm)}\n\n  recordingService = inject(RecordingService);\n  dialogService = inject(DialogService);\n  currentRecording$ = new BehaviorSubject(null);\n\n  /**\n   * Observable emitting all the recordings the user has made in the app.\n   * \n   *  Also performs filtering by a search term applied to the titles of the recordings\n   *\n   * @type {Observable}\n   */\n  recordings$: Observable = combineLatest([this.recordingService.recordings$, this.searchTerm$]).pipe(\n    map(([recordings, searchTerm]) => !!searchTerm ? recordings.filter(r => r.title?.includes(searchTerm)) : recordings)\n  );\n\n  /**\n   * Observable emmiting a boolean indicating an ongoing recording\n   *\n   * @type {Observable}\n   */\n  ongoingRecording$ = this.currentRecording$.pipe(\n    filter(rec => rec !== null),\n    switchMap(rec => rec!.stopped$),\n    map(bool => !bool),\n    startWith(false),\n    shareReplay(1)\n  );\n  \n  /**\n   * Function that starts a recording\n   */\n  startRecording() {\n    this.recordingService.startRecording$().pipe(\n      take(1),\n      tap(rec => this.currentRecording$.next(rec)),\n    ).subscribe(res => {});\n  }\n\n  /**\n   * Function that stops a recording\n   */\n  stopRecording() {\n    if (this.currentRecording$.value) {\n      this.currentRecording$.value.stopRecording();\n    }\n  }\n\n  /**\n   * Function that opens a dialog with a videoplayer with the passed recording\n   *\n   * @param {Recording} recording - recording to play\n   */\n  playRecording(recording: Recording) {\n    this.dialogService.open(VideoPlayerComponent, {\n      header: recording.title,\n      width: \"90%\",\n      data: {\n        recording\n      }\n    })\n  }\n\n  /**\n   * Function that initiates a recording export\n   *\n   * @param {Recording} recording - recording to export\n   */\n  exportRecording(recording: Recording) {\n    this.recordingService.exportRecoding$(recording)\n      .subscribe(res => res);\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n            \n            \n                \n                \n            \n        \n    \n\n\n\\\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                        \\'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'VideoPlayerComponent', 'selector': 'app-video-player'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICache.html":{"url":"interfaces/ICache.html","title":"interface - ICache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/local-storage/local-storage.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A simple Cache interface containing a BehaviorSubject with a value mapped by a string key\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in src/app/services/local-storage/local-storage.service.ts:10\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * A simple Cache interface containing a BehaviorSubject with a value mapped by a string key\n *\n * @interface ICache\n * @typedef {ICache}\n */\ninterface ICache { /**\n *  BehaviorSubject with a value mapped by a string key\n */\n[key: string]: BehaviorSubject; }\n\ntype serializable = object | Object;\n\n/**\n * LocalStorageService reponsible for interacting with the localstorage Web Storage API. Saves data in a JSON format.\n *\n * @export\n * @class LocalStorageService\n * @typedef {LocalStorageService}\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n  /**\n   * Cache contaning already requested data \n   *\n   * @private\n   * @type {ICache}\n   */\n  private cache: ICache;\n\n  /**\n   * Creates an instance of LocalStorageService.\n   *\n   * @constructor\n   */\n  constructor() {\n    this.cache = {};\n  }\n\n  /**\n   * Sets a value of a key in the local storage\n   * \n   * Also updates the value in the cache if needed\n   *\n   * @template {serializable} T - Type expected to be set and returned\n   * @param {string} key - key to set\n   * @param {T} value - value to set\n   * @returns {BehaviorSubject} - BehaviorSubject containing the set value\n   */\n  setItem(key: string, value: T): BehaviorSubject {\n    localStorage.setItem(key, JSON.stringify(value));\n\n    if (this.cache[key]) {\n      this.cache[key].next(value);\n      return this.cache[key];\n    }\n\n    return this.cache[key] = new BehaviorSubject(value);\n  }\n\n  /**\n   * Gets a value of a key from the local storage or returns value from the cache\n   * \n   * Also persist the value in the cache if not available\n   *\n   * @template {serializable} T - Type expected to be returned\n   * @param {string} key - key of the value to be returned\n   * @returns {BehaviorSubject} - BehaviorSubject containing the value or undefined if not present\n   */\n  getItem(key: string): BehaviorSubject {\n    if (this.cache[key])\n      return this.cache[key];\n    else\n      return this.cache[key] = new BehaviorSubject(!!localStorage.getItem(key) ? JSON.parse(localStorage.getItem(key)!) : undefined);\n  }\n\n  /**\n   * Deletes an item from the localstorage and removes it from the cache\n   *\n   * @param {string} key - key to delete\n   */\n  removeItem(key: string) {\n    localStorage.removeItem(key);\n    if (this.cache[key])\n      this.cache[key].next(undefined);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageService.html":{"url":"injectables/LocalStorageService.html","title":"injectable - LocalStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/local-storage/local-storage.service.ts\n        \n\n\n            \n                Description\n            \n            \n                LocalStorageService reponsible for interacting with the localstorage Web Storage API. Saves data in a JSON format.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getItem\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/local-storage/local-storage.service.ts:34\n                            \n                        \n\n                \n                    \n                            Creates an instance of LocalStorageService.\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/local-storage/local-storage.service.ts:75\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Gets a value of a key from the local storage or returns value from the cache\nAlso persist the value in the cache if not available\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nkey of the value to be returned\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     BehaviorSubject\n\n                        \n                            \n                                \nBehaviorSubject containing the value or undefined if not present\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/local-storage/local-storage.service.ts:87\n                        \n                    \n\n\n            \n                \n                        Deletes an item from the localstorage and removes it from the cache\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nkey to delete\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/local-storage/local-storage.service.ts:55\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Sets a value of a key in the local storage\nAlso updates the value in the cache if needed\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nkey to set\n\n\n                                            \n                                        \n                                        \n                                                value\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nvalue to set\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     BehaviorSubject\n\n                        \n                            \n                                \nBehaviorSubject containing the set value\n\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cache\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ICache\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/local-storage/local-storage.service.ts:34\n                        \n                    \n\n            \n                \n                    Cache contaning already requested data\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * A simple Cache interface containing a BehaviorSubject with a value mapped by a string key\n *\n * @interface ICache\n * @typedef {ICache}\n */\ninterface ICache { /**\n *  BehaviorSubject with a value mapped by a string key\n */\n[key: string]: BehaviorSubject; }\n\ntype serializable = object | Object;\n\n/**\n * LocalStorageService reponsible for interacting with the localstorage Web Storage API. Saves data in a JSON format.\n *\n * @export\n * @class LocalStorageService\n * @typedef {LocalStorageService}\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n  /**\n   * Cache contaning already requested data \n   *\n   * @private\n   * @type {ICache}\n   */\n  private cache: ICache;\n\n  /**\n   * Creates an instance of LocalStorageService.\n   *\n   * @constructor\n   */\n  constructor() {\n    this.cache = {};\n  }\n\n  /**\n   * Sets a value of a key in the local storage\n   * \n   * Also updates the value in the cache if needed\n   *\n   * @template {serializable} T - Type expected to be set and returned\n   * @param {string} key - key to set\n   * @param {T} value - value to set\n   * @returns {BehaviorSubject} - BehaviorSubject containing the set value\n   */\n  setItem(key: string, value: T): BehaviorSubject {\n    localStorage.setItem(key, JSON.stringify(value));\n\n    if (this.cache[key]) {\n      this.cache[key].next(value);\n      return this.cache[key];\n    }\n\n    return this.cache[key] = new BehaviorSubject(value);\n  }\n\n  /**\n   * Gets a value of a key from the local storage or returns value from the cache\n   * \n   * Also persist the value in the cache if not available\n   *\n   * @template {serializable} T - Type expected to be returned\n   * @param {string} key - key of the value to be returned\n   * @returns {BehaviorSubject} - BehaviorSubject containing the value or undefined if not present\n   */\n  getItem(key: string): BehaviorSubject {\n    if (this.cache[key])\n      return this.cache[key];\n    else\n      return this.cache[key] = new BehaviorSubject(!!localStorage.getItem(key) ? JSON.parse(localStorage.getItem(key)!) : undefined);\n  }\n\n  /**\n   * Deletes an item from the localstorage and removes it from the cache\n   *\n   * @param {string} key - key to delete\n   */\n  removeItem(key: string) {\n    localStorage.removeItem(key);\n    if (this.cache[key])\n      this.cache[key].next(undefined);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OngoingRecording.html":{"url":"classes/OngoingRecording.html","title":"class - OngoingRecording","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OngoingRecording\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/ongoing-recording.class.ts\n        \n\n\n            \n                Description\n            \n            \n                A class representing an ongoing recording\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chunks\n                            \n                            \n                                    Optional\n                                mediaRecorder\n                            \n                            \n                                stopped$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                stopRecording\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chunks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/models/ongoing-recording.class.ts:28\n                        \n                    \n\n            \n                \n                    Webm datachunks of the current recording\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        mediaRecorder\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MediaRecorder\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/ongoing-recording.class.ts:22\n                        \n                    \n\n            \n                \n                    The MediaRecorder object that is responsible for the ongoing recording\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stopped$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/models/ongoing-recording.class.ts:16\n                        \n                    \n\n            \n                \n                    A BehaviorSubject that emits when the current recording is stopped\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        stopRecording\n                        \n                    \n                \n            \n            \n                \nstopRecording()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/models/ongoing-recording.class.ts:35\n                        \n                    \n\n\n            \n                \n                        Function that once called, passes a .stop() call to the working MediaRecorder\nStops the current ongoing record\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BehaviorSubject } from \"rxjs\";\n\n/**\n * A class representing an ongoing recording\n *\n * @export\n * @class OngoingRecording\n * @typedef {OngoingRecording}\n */\nexport class OngoingRecording {\n    /**\n     * A BehaviorSubject that emits when the current recording is stopped\n     *\n     * @type {*}\n     */\n    stopped$ = new BehaviorSubject(false);\n    /**\n     * The MediaRecorder object that is responsible for the ongoing recording\n     *\n     * @type {?MediaRecorder}\n     */\n    mediaRecorder?: MediaRecorder;\n    /**\n     * Webm datachunks of the current recording\n     *\n     * @type {any[]}\n     */\n    chunks: any[] = [];\n\n    /**\n     * Function that once called, passes a .stop() call to the working MediaRecorder\n     * \n     * Stops the current ongoing record\n     */\n    stopRecording(): void {\n        this.mediaRecorder?.stop();\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OpfsService.html":{"url":"injectables/OpfsService.html","title":"injectable - OpfsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OpfsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/opfs/opfs.service.ts\n        \n\n\n            \n                Description\n            \n            \n                OPFS service resposible for all OPFS operations in the app\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                exportFile$\n                            \n                            \n                                getFile$\n                            \n                            \n                                getFileWriterStream$\n                            \n                            \n                                saveFileOPFS$\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/opfs/opfs.service.ts:14\n                            \n                        \n\n                \n                    \n                            Creates an instance of OpfsService.\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        exportFile$\n                        \n                    \n                \n            \n            \n                \nexportFile$(fileToExportPath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/opfs/opfs.service.ts:58\n                        \n                    \n\n\n            \n                \n                        Asks the user to specify a system path to save/export the OPFS file to the clients device\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fileToExportPath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nfile to export\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFile$\n                        \n                    \n                \n            \n            \n                \ngetFile$(filePath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/opfs/opfs.service.ts:44\n                        \n                    \n\n\n            \n                \n                        Returns a File from the specified OPFS path\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \nObservable containing the requested file\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFileWriterStream$\n                        \n                    \n                \n            \n            \n                \ngetFileWriterStream$(filePath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/opfs/opfs.service.ts:30\n                        \n                    \n\n\n            \n                \n                        Creates a FileSystemWritableFileStream of the specified path in the OPFS\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \nObservable containing the FileSystemWritableFileStream\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveFileOPFS$\n                        \n                    \n                \n            \n            \n                \nsaveFileOPFS$(blob: Blob, filename: string, format: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/opfs/opfs.service.ts:77\n                        \n                    \n\n\n            \n                \n                        Writes a blob to the OPFS\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                blob\n                                            \n                                                        Blob\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nblob to write\n\n\n                                            \n                                        \n                                        \n                                                filename\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nname of the\n\n\n                                            \n                                        \n                                        \n                                                format\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, Subject, combineLatest, from, map, switchMap, take, tap } from 'rxjs';\n\n/**\n * OPFS service resposible for all OPFS operations in the app\n *\n * @export\n * @class OpfsService\n * @typedef {OpfsService}\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class OpfsService {\n\n  /**\n   * Creates an instance of OpfsService.\n   *\n   * @constructor\n   */\n  constructor() { \n  }\n\n  /**\n   * Creates a FileSystemWritableFileStream of the specified path in the OPFS\n   *\n   * @param {string} filePath\n   * @returns {Observable} - Observable containing the FileSystemWritableFileStream\n   */\n  getFileWriterStream$(filePath: string): Observable {\n    return from(navigator.storage.getDirectory()).pipe(\n      take(1),\n      switchMap(root => from(root.getFileHandle(filePath, {create: true}))),\n      switchMap(fileHandler => from(fileHandler.createWritable()))\n    );\n  }\n  \n  /**\n   * Returns a File from the specified OPFS path\n   *\n   * @param {string} filePath\n   * @returns {Observable} - Observable containing the requested file\n   */\n  getFile$(filePath: string): Observable {\n    return from(navigator.storage.getDirectory()).pipe(\n      take(1),\n      switchMap(root => from(root.getFileHandle(filePath, {create: true}))),\n      switchMap(fileHandler => from(fileHandler.getFile()))\n    );\n  }\n\n  /**\n   * Asks the user to specify a system path to save/export the OPFS file to the clients device\n   *\n   * @param {string} fileToExportPath - file to export\n   * @returns {Observable}\n   */\n  exportFile$(fileToExportPath: string): Observable {\n    const fileWritable$ = from(window.showSaveFilePicker({suggestedName: fileToExportPath})).pipe(\n      switchMap(filePicker => filePicker.createWritable()),\n    );\n    return combineLatest([this.getFile$(fileToExportPath), fileWritable$]).pipe(\n      take(1),\n      tap(([exportFile, saveFile]) => saveFile.write(exportFile)),\n      switchMap(([exportFile, saveFile]) => from(saveFile.close()))\n    );\n  }\n\n  /**\n   * Writes a blob to the OPFS\n   *\n   * @param {Blob} blob - blob to write\n   * @param {string} filename - name of the \n   * @param {string} format\n   * @returns {Observable}\n   */\n  saveFileOPFS$(blob: Blob, filename: string, format: string): Observable {\n    const filePath = filename + '.' + format; \n    return combineLatest([this.getFileWriterStream$(filePath), blob.arrayBuffer()])\n      .pipe(\n        tap(([fileHandler, buffer]) => fileHandler.write(buffer)),\n        tap(([fileHandler, buffer]) => fileHandler.close()),\n        map(() => filePath)\n    )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Recording.html":{"url":"classes/Recording.html","title":"class - Recording","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Recording\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/recording.class.ts\n        \n\n\n            \n                Description\n            \n            \n                A recording class representing a already created record\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                base64Thumbnail\n                            \n                            \n                                    Optional\n                                created\n                            \n                            \n                                    Optional\n                                fileUrl\n                            \n                            \n                                    Optional\n                                title\n                            \n                            \n                                    Optional\n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        base64Thumbnail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/recording.class.ts:38\n                        \n                    \n\n            \n                \n                    base64 jpeg string of the thumbnail of this recording\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        created\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/recording.class.ts:32\n                        \n                    \n\n            \n                \n                    Date of the recording\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        fileUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/recording.class.ts:26\n                        \n                    \n\n            \n                \n                    Url of the record in the OPFS\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/recording.class.ts:20\n                        \n                    \n\n            \n                \n                    Title of the record\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/recording.class.ts:14\n                        \n                    \n\n            \n                \n                    UUID of the record\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Recording {\n    /**\n     * UUID of the record\n     *\n     * @type {?string}\n     */\n    uuid?: string;\n    /**\n     * Title of the record\n     *\n     * @type {?string}\n     */\n    title?: string;\n    /**\n     * Url of the record in the OPFS\n     *\n     * @type {?string}\n     */\n    fileUrl?: string;\n    /**\n     * Date of the recording\n     *\n     * @type {?Date}\n     */\n    created?: Date;\n    /**\n     * base64 jpeg string of the thumbnail of this recording\n     *\n     * @type {?string}\n     */\n    base64Thumbnail?: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RecordingService.html":{"url":"injectables/RecordingService.html","title":"injectable - RecordingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RecordingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/recording/recording.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service responsible for the recording process\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                LOCAL_STORAGE_KEY\n                            \n                            \n                                recordings$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRecording\n                            \n                            \n                                exportRecoding$\n                            \n                            \n                                    Private\n                                onRecordingComplete\n                            \n                            \n                                removeRecording\n                            \n                            \n                                startRecording$\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(localStorage: LocalStorageService, thumbnailService: ThumbnailService, opfsService: OpfsService, ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/recording/recording.service.ts:36\n                            \n                        \n\n                \n                    \n                            Creates an instance of RecordingService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        localStorage\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thumbnailService\n                                                  \n                                                        \n                                                                        ThumbnailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        opfsService\n                                                  \n                                                        \n                                                                        OpfsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRecording\n                        \n                    \n                \n            \n            \n                \naddRecording(recordingToAdd: Recording)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/recording/recording.service.ts:59\n                        \n                    \n\n\n            \n                \n                        Receives a recording object, adds an id and creation date and saves it in the recording db\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                recordingToAdd\n                                            \n                                                            Recording\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nrecording object to be added to the recordings db\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportRecoding$\n                        \n                    \n                \n            \n            \n                \nexportRecoding$(recording: Recording)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/recording/recording.service.ts:107\n                        \n                    \n\n\n            \n                \n                        Exports the saved recording videofile in a user specified location\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                recording\n                                            \n                                                            Recording\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        onRecordingComplete\n                        \n                    \n                \n            \n            \n                \n                        \n                    onRecordingComplete(currentRecording: OngoingRecording)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/recording/recording.service.ts:119\n                        \n                    \n\n\n            \n                \n                        Util function to initiate the saving process when a recording is completed.\nPromps the user to give the recording a name and converts the chunks of the video to a webm blob\nTriggers a filesave to the OPFS\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                currentRecording\n                                            \n                                                            OngoingRecording\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nthe ongoing recording that is complete and needs saving\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRecording\n                        \n                    \n                \n            \n            \n                \nremoveRecording(recordingUuidToRemove: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/recording/recording.service.ts:70\n                        \n                    \n\n\n            \n                \n                        Deletes a recording from the recording db by its uuid\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                recordingUuidToRemove\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nuuid of the recording to be removed\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startRecording$\n                        \n                    \n                \n            \n            \n                \nstartRecording$()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/recording/recording.service.ts:79\n                        \n                    \n\n\n            \n                \n                        Returns an observable that once subscribed to starts a recording\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \nReturns the observable containing the ongoing recording object.\n\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        LOCAL_STORAGE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'recordings'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/recording/recording.service.ts:29\n                        \n                    \n\n            \n                \n                    The local storage key, where we store the past recording information\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recordings$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.localStorage.getItem(RecordingService.LOCAL_STORAGE_KEY)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/recording/recording.service.ts:36\n                        \n                    \n\n            \n                \n                    BehaviourSubject containing all past recordings in the local storage\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Observable, combineLatest, from, map, noop, take } from 'rxjs';\nimport { Recording } from '../../models/recording.class';\nimport { LocalStorageService } from '../local-storage/local-storage.service';\nimport * as uuid from 'uuid';\nimport { OngoingRecording } from '../../models/ongoing-recording.class';\nimport { ThumbnailService } from '../thumbnail/thumbnail.service';\nimport { OpfsService } from '../opfs/opfs.service';\n\n/**\n * Service responsible for the recording process\n *\n * @export\n * @class RecordingService\n * @typedef {RecordingService}\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class RecordingService {\n\n  /**\n   * The local storage key, where we store the past recording information\n   *\n   * @static\n   * @readonly\n   * @type {\"recordings\"}\n   */\n  static readonly LOCAL_STORAGE_KEY = 'recordings';\n\n  /**\n   * BehaviourSubject containing all past recordings in the local storage\n   *\n   * @type {*}\n   */\n  recordings$ = this.localStorage.getItem(RecordingService.LOCAL_STORAGE_KEY);\n\n  /**\n   * Creates an instance of RecordingService.\n   *\n   * @constructor\n   * @param {LocalStorageService} localStorage\n   * @param {ThumbnailService} thumbnailService\n   * @param {OpfsService} opfsService\n   * @param {NgZone} ngZone\n   */\n  constructor(\n    private readonly localStorage: LocalStorageService,\n    private readonly thumbnailService: ThumbnailService,\n    private readonly opfsService: OpfsService,\n    private readonly ngZone: NgZone\n  ) { }\n\n  /**\n   * Receives a recording object, adds an id and creation date and saves it in the recording db\n   *\n   * @param {Recording} recordingToAdd - recording object to be added to the recordings db\n   */\n  addRecording(recordingToAdd: Recording): void {\n    recordingToAdd.uuid = uuid.v4()\n    recordingToAdd.created = new Date();\n    this.localStorage.setItem(RecordingService.LOCAL_STORAGE_KEY, [...(this.recordings$.value || []), recordingToAdd]);\n  }\n\n  /**\n   * Deletes a recording from the recording db by its uuid\n   *\n   * @param {string} recordingUuidToRemove - uuid of the recording to be removed\n   */\n  removeRecording(recordingUuidToRemove: string): void {\n    this.localStorage.setItem(RecordingService.LOCAL_STORAGE_KEY, this.recordings$.value.filter(r => r.uuid != recordingUuidToRemove));\n  }\n\n  /**\n   * Returns an observable that once subscribed to starts a recording\n   *\n   * @returns {Observable} - Returns the observable containing the ongoing recording object.\n   */\n  startRecording$(): Observable {\n    const currentRecording = new OngoingRecording();\n    return from(navigator.mediaDevices.getDisplayMedia({ video: true, audio: true })).pipe(\n      map(stream => new MediaRecorder(stream, { mimeType: \"video/webm\" })),\n      map(mediaRecorder => {\n        mediaRecorder.ondataavailable = (e) => {\n          e.data.size > 0 ? currentRecording.chunks.push(e.data) : noop\n        };\n        mediaRecorder.onstop = () => {\n          this.ngZone.run(() => {\n            this.onRecordingComplete(currentRecording);\n            currentRecording.stopped$.next(true);\n          });\n          mediaRecorder.stream.getTracks().forEach(t => t.stop());\n        };\n        currentRecording.mediaRecorder = mediaRecorder;\n        mediaRecorder.start(250);\n        return currentRecording;\n      })\n    );\n  }\n\n  /**\n   * Exports the saved recording videofile in a user specified location\n   *\n   * @param {Recording} recording\n   * @returns {Observable}\n   */\n  exportRecoding$(recording: Recording): Observable {\n    return this.opfsService.exportFile$(recording.fileUrl || '');\n  }\n\n  /**\n   * Util function to initiate the saving process when a recording is completed.\n   * Promps the user to give the recording a name and converts the chunks of the video to a webm blob\n   * Triggers a filesave to the OPFS\n   *\n   * @private\n   * @param {OngoingRecording} currentRecording - the ongoing recording that is complete and needs saving\n   */\n  private onRecordingComplete(currentRecording: OngoingRecording) {\n    const filename = window.prompt(\"Recording title name\", \"video\");\n    const blob = new Blob(currentRecording.chunks, { type: \"video/webm\" });\n    if (filename) {\n      combineLatest([this.opfsService.saveFileOPFS$(blob, filename, 'webm'), this.thumbnailService.generateThumbnail$(blob)])\n        .pipe(take(1)).subscribe(([filePath, base64]) => {\n          if (filePath?.length) {\n            let recording: Recording = new Recording();\n            recording.title = filename;\n            recording.fileUrl = filePath;\n            recording.base64Thumbnail = base64;\n            this.addRecording(recording);\n          }\n      });\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SafeUrlPipe.html":{"url":"pipes/SafeUrlPipe.html","title":"pipe - SafeUrlPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SafeUrlPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/safeUrl.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                Safe URL pipe that marks an external ULR as safe so Angular can use it\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        safeUrl\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pipes/safeUrl.pipe.ts:30\n                        \n                    \n\n\n            \n                \n                        Marks the incoming URL as safe to trust\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nURL to mark as safe\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n/**\n * Safe URL pipe that marks an external ULR as safe so Angular can use it\n *\n * @export\n * @class SafeUrlPipe\n * @typedef {SafeUrlPipe}\n * @implements {PipeTransform}\n */\n@Pipe({\n  name: 'safeUrl',\n  standalone: true\n})\nexport class SafeUrlPipe implements PipeTransform {\n  /**\n   * Creates an instance of SafeUrlPipe.\n   *\n   * @constructor\n   * @param {DomSanitizer} sanitized\n   */\n  constructor(private sanitized: DomSanitizer) { }\n  /**\n   * Marks the incoming URL as safe to trust\n   *\n   * @param {string} value - URL to mark as safe\n   * @returns {*}\n   */\n  transform(value: string) {\n    return this.sanitized.bypassSecurityTrustUrl(value);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThumbnailService.html":{"url":"injectables/ThumbnailService.html","title":"injectable - ThumbnailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ThumbnailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/thumbnail/thumbnail.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service responsible for generating a jpeg thumbnail based on a video blob\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateThumbnail$\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/thumbnail/thumbnail.service.ts:14\n                            \n                        \n\n                \n                    \n                            Creates an instance of ThumbnailService.\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateThumbnail$\n                        \n                    \n                \n            \n            \n                \ngenerateThumbnail$(blob: Blob)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/thumbnail/thumbnail.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Generates a jpeg base64 thumbnail based on the last frame of the video blob provided\nby creating a video tag, loading the videoblob in it, skipping to the last frame, appending it in a canvas\nand getting an image out of it.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                blob\n                                            \n                                                        Blob\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nblob of the video\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable containing a base64 jpeg string of the generated thumbnail\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, combineLatest, from, fromEvent, map, switchMap, take } from 'rxjs';\n\n/**\n * Service responsible for generating a jpeg thumbnail based on a video blob\n *\n * @export\n * @class ThumbnailService\n * @typedef {ThumbnailService}\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThumbnailService {\n\n  /**\n   * Creates an instance of ThumbnailService.\n   *\n   * @constructor\n   */\n  constructor() { }\n\n  \n  /**\n   * Generates a jpeg base64 thumbnail based on the last frame of the video blob provided\n   * by creating a video tag, loading the videoblob in it, skipping to the last frame, appending it in a canvas\n   * and getting an image out of it.\n   *\n   * @param {Blob} blob - blob of the video\n   * @returns {Observable} Observable containing a base64 jpeg string of the generated thumbnail\n   */\n  generateThumbnail$(blob: Blob): Observable {\n    const canvas = document.createElement(\"canvas\");\n    const video = document.createElement(\"video\");\n    video.muted = true;\n    video.src = URL.createObjectURL(blob);\n    // Due to a chrome bug, we need to set the current time to an comically large value\n    // Seems like webm doesn't support seeking on chrome, chrome also doesn't allow recording of mp4\n    // Too bad :(\n    video.currentTime = 1e101;\n    const obs = combineLatest([fromEvent(video, 'loadeddata'), fromEvent(video, 'loadedmetadata'), fromEvent(video, 'timeupdate')]).pipe(\n      take(1),\n      map(() => {\n        let ctx = canvas.getContext('2d');\n        canvas.width = Math.floor(video.videoWidth / 5);\n        canvas.height = Math.floor(video.videoHeight / 5);\n        ctx?.drawImage(video, 0, 0, canvas.width, canvas.height);\n        video.pause();\n        return canvas.toDataURL(\"image/jpeg\");\n      })\n    );\n    return obs;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopBarComponent.html":{"url":"components/TopBarComponent.html","title":"component - TopBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TopBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/top-bar/top-bar.component.ts\n\n\n\n    \n        Description\n    \n    \n        The menu bar on top of the web UI. Contains a search field.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-top-bar\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            MenubarModule\n                            ReactiveFormsModule\n                            InputTextModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./top-bar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./top-bar.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                searchInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                searchTerm\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        searchTerm\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/top-bar/top-bar.component.ts:31\n                            \n                        \n                \n                    \n                        Output EventEmitter that emmits a search term that can be passed to a component for filtering\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/top-bar/top-bar.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        searchInput\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/top-bar/top-bar.component.ts:39\n                        \n                    \n\n            \n                \n                    FormControl of the searchfield\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { MenubarModule } from 'primeng/menubar';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport {  debounceTime, skipWhile } from 'rxjs';\n\n/**\n * The menu bar on top of the web UI. Contains a search field.\n *\n * @export\n * @class TopBarComponent\n * @typedef {TopBarComponent}\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-top-bar',\n  standalone: true,\n  imports: [MenubarModule, ReactiveFormsModule, InputTextModule],\n  templateUrl: './top-bar.component.html',\n  styleUrl: './top-bar.component.scss'\n})\nexport class TopBarComponent implements OnInit {\n\n  /**\n   * Output EventEmitter that emmits a search term that can be passed to a component for filtering\n   *\n   * @type {*}\n   */\n  @Output()\n  searchTerm = new EventEmitter();\n\n  /**\n   * FormControl of the searchfield\n   *\n   * @public\n   * @type {*}\n   */\n  public searchInput = new FormControl(null);\n\n  ngOnInit(): void {\n    this.searchInput.valueChanges.pipe(\n      takeUntilDestroyed(),\n      skipWhile(str => !str || str?.length  this.searchTerm.emit(searchTerm!));\n  }\n}\n\n    \n\n    \n        \n    \n        Screen recording\n    \n    \n        \n            \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Screen recording                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'VideoPlayerComponent', 'selector': 'app-video-player'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TopBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VideoPlayerComponent.html":{"url":"components/VideoPlayerComponent.html","title":"component - VideoPlayerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VideoPlayerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/video-player/video-player.component.ts\n\n\n\n    \n        Description\n    \n    \n        Video Player dialog component.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-video-player\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            SafeUrlPipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./video-player.component.html\n            \n\n\n\n            \n                styleUrl\n                ./video-player.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                instance\n                            \n                            \n                                opfsService\n                            \n                            \n                                recording$\n                            \n                            \n                                    Public\n                                ref\n                            \n                            \n                                videoURL$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ref: DynamicDialogRef, dialogService: DialogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/video-player/video-player.component.ts:53\n                            \n                        \n\n                \n                    \n                            Creates an instance of VideoPlayerComponent. Populates the dialog instance that initiated the VideoPlayerComponent instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                    DynamicDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                    DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/video-player/video-player.component.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DynamicDialogComponent\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/video-player/video-player.component.ts:34\n                        \n                    \n\n            \n                \n                    Instance of the dialog that contains the current VideoPlayerComponent instance\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        opfsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(OpfsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/video-player/video-player.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recording$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(undefined)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/video-player/video-player.component.ts:41\n                        \n                    \n\n            \n                \n                    The available recording, undefined if not available\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ref\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DynamicDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/video-player/video-player.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        videoURL$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.recording$.pipe(\n    takeUntilDestroyed(),\n    skipWhile(rec => !rec || !rec?.fileUrl),\n    switchMap(rec => this.opfsService.getFile$(rec?.fileUrl!)),\n    map(file => URL.createObjectURL(file))\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/components/video-player/video-player.component.ts:48\n                        \n                    \n\n            \n                \n                    Description placeholder\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, inject } from '@angular/core';\nimport { DialogService, DynamicDialogComponent, DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { Recording } from '../../models/recording.class';\nimport { OpfsService } from '../../services/opfs/opfs.service';\nimport { BehaviorSubject, map, skipWhile, switchMap } from 'rxjs';\nimport { CommonModule } from '@angular/common';\nimport { SafeUrlPipe } from '../../pipes/safeUrl.pipe';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n/**\n * Video Player dialog component.\n *\n * @export\n * @class VideoPlayerComponent\n * @typedef {VideoPlayerComponent}\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-video-player',\n  standalone: true,\n  imports: [CommonModule, SafeUrlPipe],\n  templateUrl: './video-player.component.html',\n  styleUrl: './video-player.component.scss'\n})\nexport class VideoPlayerComponent implements OnInit {\n\n  opfsService = inject(OpfsService);\n\n  /**\n   * Instance of the dialog that contains the current VideoPlayerComponent instance\n   *\n   * @type {?DynamicDialogComponent}\n   */\n  instance?: DynamicDialogComponent;\n\n  /**\n   * The available recording, undefined if not available\n   *\n   * @type {BehaviorSubject}\n   */\n  recording$: BehaviorSubject = new BehaviorSubject(undefined);\n\n  /**\n   * Description placeholder\n   *\n   * @type {*}\n   */\n  videoURL$ = this.recording$.pipe(\n    takeUntilDestroyed(),\n    skipWhile(rec => !rec || !rec?.fileUrl),\n    switchMap(rec => this.opfsService.getFile$(rec?.fileUrl!)),\n    map(file => URL.createObjectURL(file))\n  )\n\n  /**\n   * Creates an instance of VideoPlayerComponent. Populates the dialog instance that initiated the VideoPlayerComponent instance\n   *\n   * @constructor\n   * @param {DynamicDialogRef} ref\n   * @param {DialogService} dialogService\n   */\n  constructor(public ref: DynamicDialogRef, private dialogService: DialogService) {\n    this.instance = this.dialogService.getInstance(ref);\n  }\n\n  ngOnInit(): void {\n    if (this.instance?.data) {\n      this.recording$.next(this.instance.data['recording']);\n    }\n  }\n}\n\n    \n\n    \n        \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'VideoPlayerComponent', 'selector': 'app-video-player'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VideoPlayerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/pages/home-page/home-page.component.ts\n            \n            component\n            HomePageComponent\n            \n                75 %\n                (9/12)\n            \n        \n        \n            \n                \n                src/app/components/top-bar/top-bar.component.ts\n            \n            component\n            TopBarComponent\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/components/video-player/video-player.component.ts\n            \n            component\n            VideoPlayerComponent\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/models/ongoing-recording.class.ts\n            \n            class\n            OngoingRecording\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/models/recording.class.ts\n            \n            class\n            Recording\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/pipes/safeUrl.pipe.ts\n            \n            pipe\n            SafeUrlPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/local-storage/local-storage.service.ts\n            \n            injectable\n            LocalStorageService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/services/local-storage/local-storage.service.ts\n            \n            interface\n            ICache\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/opfs/opfs.service.ts\n            \n            injectable\n            OpfsService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/services/recording/recording.service.ts\n            \n            injectable\n            RecordingService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/services/thumbnail/thumbnail.service.ts\n            \n            injectable\n            ThumbnailService\n            \n                100 %\n                (3/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.3.0\n        \n            @angular/common : ^17.3.0\n        \n            @angular/compiler : ^17.3.0\n        \n            @angular/core : ^17.3.0\n        \n            @angular/forms : ^17.3.0\n        \n            @angular/platform-browser : ^17.3.0\n        \n            @angular/platform-browser-dynamic : ^17.3.0\n        \n            @angular/router : ^17.3.0\n        \n            @types/uuid : ^9.0.8\n        \n            primeflex : ^3.3.1\n        \n            primeicons : ^7.0.0\n        \n            primeng : ^17.12.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            uuid : ^9.0.1\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAngularScreenRecording\nAn Angular Single Page Application written in a reactive way for screen recording. Supports video and audio recording, exports in .webm format.\nPrivacy guaranteed. Works locally in your browser, no web requests, no data sharing.\nTechnologies used\n\nTypescript 5.4.2\nAngular 17.3.0\nRxJS 7.8.0\nPrimeNG/Prime Flex\nLocal Storage as a quick JSON database\nOrigin private file system (OPFS)/FileSystem API for storing/saving/exporting of the recorded videofiles\nMediaDevices API for capturing the devices screen\n\nDocumetation\n\nDev documentation done with JSDoc comments in the code. Browse here:  Documentation\nWorkflow\nA user starts a recoring by pressing the recording button in the bottom right corner. This initializes a MediaDevices request for sharing a screen. The user can choose wherever to record his whole screen or a specific app/tab and if he needs system audio in the recording.\nRecording can be stopped by either stopping the screenshare or pressing the recording button (now red) in the bottom right corner.\nThe recorded blobs get exported to a webm file in the OPFS and a JSON object containing metadata gets persisted in the clients local storage.\nPast recordings can be previewed in the app and exported using the FileSystem API to a location in the clients filesystem with a press of a button.\nFurther reading\n\nOrigin private file system - MDN Web Docs\n\nThe origin private file system - Web.dev\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            serializable   (src/.../local-storage.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/local-storage/local-storage.service.ts\n    \n    \n        \n            \n                \n                    \n                    serializable\n                \n            \n            \n                \n                        object | Object\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideRouter(routes, withComponentInputBinding()), provideAnimations()]\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
